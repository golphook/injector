{"kind":"send-response","message":{"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"VLS Version: 0.0.1.d914108, OS: macos 64"}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"VLS executable path: /Users/fleur/.local/share/nvim/lsp_servers/vls/vls"}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"VLS build with V 4b3c3d9"}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"Client / Editor: Neovim 0.7.2 (PID: 15401)"}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"Using V path (VROOT): /Users/fleur/Documents/prod/ressources/v"}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"resolveProvider":false,"triggerCharacters":["=",".",":","{",",","("," "]},"signatureHelpProvider":{"triggerCharacters":["("],"retriggerCharacters":[","," "]},"definitionProvider":true,"typeDefinitionProvider":false,"implementationProvider":true,"referencesProvider":false,"documentHightlightProvider":false,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":false,"codeLensProvider":{"resolveProvider":false},"documentFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"","moreTriggerCharacter":[]},"renameProvider":false,"documentLinkProvider":false,"colorProvider":false,"declarationProvider":false,"executeCommandProvider":"","foldingRangeProvider":true,"experimental":{}}}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/hijack.v","diagnostics":[]}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/memory.v","diagnostics":[]}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/consts.v","diagnostics":[]}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/process.v","diagnostics":[]}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/win_def.v","diagnostics":[]}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/injector.v","diagnostics":[]}},"timestamp":1664350470}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350471}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/vac.v","diagnostics":[]}},"timestamp":1664350471}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350471}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350481}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350481}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350481}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350482}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350490}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350491}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350491}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350491}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350491}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350492}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350492}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350492}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350493}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350493}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350493}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350496}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350496}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350496}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350497}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350497}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350498}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350498}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350499}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350505}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350505}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350506}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350507}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350507}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350507}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":2,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":29,"line":122},"context":{"triggerKind":1}}},"timestamp":1664350508}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":2,"result":[{"label":"rand","kind":9,"detail":"","insertText":"rand","insertTextFormat":1},{"label":"embed_file","kind":9,"detail":"","insertText":"embed_file","insertTextFormat":1},{"label":"C","kind":9,"detail":"C symbol definitions","insertText":"C.","insertTextFormat":1},{"label":"err","kind":6,"detail":"err IError","insertText":"err","insertTextFormat":1},{"label":"err","kind":6,"detail":"err IError","insertText":"err","insertTextFormat":1},{"label":"hnd","kind":6,"detail":"hnd C.HANDLE","insertText":"hnd","insertTextFormat":1},{"label":"target_base","kind":6,"detail":"target_base voidptr","insertText":"target_base","insertTextFormat":1},{"label":"shellcode","kind":6,"detail":"shellcode voidptr","insertText":"shellcode","insertTextFormat":1},{"label":"base_file_addr","kind":6,"detail":"base_file_addr voidptr","insertText":"base_file_addr","insertTextFormat":1},{"label":"junk","kind":6,"detail":"mut junk","insertText":"junk","insertTextFormat":1},{"label":"img_dos","kind":6,"detail":"img_dos","insertText":"img_dos","insertTextFormat":1},{"label":"nt_header","kind":6,"detail":"nt_header","insertText":"nt_header","insertTextFormat":1},{"label":"section_header","kind":6,"detail":"mut section_header","insertText":"section_header","insertTextFormat":1},{"label":"thread_hijacking_release","kind":3,"detail":"fn thread_hijacking_release(hnd_t C.HANDLE, hnd C.HANDLE, code_cave_addr voidptr, resume bool)","insertText":"thread_hijacking_release($0, $1, $2, $3)","insertTextFormat":2},{"label":"call_dll_main_via_thread_hijacking","kind":3,"detail":"fn call_dll_main_via_thread_hijacking(hnd C.HANDLE, proc_id u32, routine voidptr, args voidptr) ?","insertText":"call_dll_main_via_thread_hijacking($0, $1, $2, $3)","insertTextFormat":2},{"label":"ThreadContext","kind":22,"detail":"struct ThreadContext","insertText":"ThreadContext{context_flags:$1, dr0:$2, dr1:$3, dr2:$4, dr3:$5, dr6:$6, dr7:$7, float_save:$8, seg_gs:$9, seg_fs:$10, seg_es:$11, seg_ds:$12, edi:$13, esi:$14, ebx:$15, edx:$16, ecx:$17, eax:$18, ebp:$19, eip:$20, seg_cs:$21, e_flags:$22, esp:$23, seg_ss:$24, extended_registers:$25}","insertTextFormat":2},{"label":"old_thread_context","kind":6,"detail":"mut old_thread_context ThreadContext","insertText":"old_thread_context","insertTextFormat":1},{"label":"code_cave","kind":6,"detail":"code_cave","insertText":"code_cave","insertTextFormat":1},{"label":"shellcode_t","kind":6,"detail":"mut shellcode_t","insertText":"shellcode_t","insertTextFormat":1},{"label":"fn_offset","kind":6,"detail":"fn_offset","insertText":"fn_offset","insertTextFormat":1},{"label":"check_byte_offset","kind":6,"detail":"check_byte_offset int","insertText":"check_byte_offset","insertTextFormat":1},{"label":"shellcode_data","kind":6,"detail":"shellcode_data","insertText":"shellcode_data","insertTextFormat":1},{"label":"a","kind":6,"detail":"mut a","insertText":"a","insertTextFormat":1},{"label":"b","kind":6,"detail":"mut b","insertText":"b","insertTextFormat":1},{"label":"c","kind":6,"detail":"mut c","insertText":"c","insertTextFormat":1},{"label":"d","kind":6,"detail":"mut d","insertText":"d","insertTextFormat":1},{"label":"e","kind":6,"detail":"mut e","insertText":"e","insertTextFormat":1},{"label":"r","kind":3,"detail":"pub fn r(fromProc C.HANDLE, atAddr voidptr) ?T","insertText":"r($0, $1)","insertTextFormat":2},{"label":"w","kind":3,"detail":"pub fn w(fromProc C.HANDLE, atAddr voidptr, withData &T) ?","insertText":"w($0, $1, $2)","insertTextFormat":2},{"label":"wr","kind":3,"detail":"pub fn wr(fromProc C.HANDLE, atAddr voidptr, withData voidptr, andSize u32) ?","insertText":"wr($0, $1, $2, $3)","insertTextFormat":2},{"label":"rar","kind":3,"detail":"pub fn rar(fromProc C.HANDLE, atAddr voidptr, andSize u32, output []T) ?","insertText":"rar($0, $1, $2, $3)","insertTextFormat":2},{"label":"wa","kind":3,"detail":"pub fn wa(fromProc C.HANDLE, atAddr voidptr, withData []T) ?","insertText":"wa($0, $1, $2)","insertTextFormat":2},{"label":"target_name","kind":6,"detail":"const target_name string","insertText":"target_name","insertTextFormat":1},{"label":"to_clear","kind":6,"detail":"const to_clear []string","insertText":"to_clear","insertTextFormat":1},{"label":"Thread","kind":22,"detail":"struct Thread","insertText":"Thread{id:$1, process_owner_id:$2, priority:$3}","insertTextFormat":2},{"label":"Process","kind":22,"detail":"struct Process","insertText":"Process{name:$1, id:$2}","insertTextFormat":2},{"label":"get_process","kind":3,"detail":"fn get_process(with_process_name string) ?Process","insertText":"get_process($0)","insertTextFormat":2},{"label":"get_thread","kind":3,"detail":"fn get_thread(with_process_id u32) ?Thread","insertText":"get_thread($0)","insertTextFormat":2},{"label":"kill_process","kind":3,"detail":"fn kill_process(with_name string) ?","insertText":"kill_process($0)","insertTextFormat":2},{"label":"ProcessInformation","kind":22,"detail":"struct ProcessInformation","insertText":"ProcessInformation{h_process:$1, h_thread:$2, process_id:$3, thread_id:$4}","insertTextFormat":2},{"label":"StartupInfoA","kind":22,"detail":"struct StartupInfoA","insertText":"StartupInfoA{cb:$1, reserved:$2, desktop:$3, title:$4, x:$5, y:$6, x_size:$7, y_size:$8, x_count_chars:$9, y_count_chars:$10, fill_attribute:$11, flags:$12, show_window:$13, reserved_2:$14, reserved_3:$15, std_input:$16, std_output:$17, std_error:$18}","insertTextFormat":2},{"label":"create_process","kind":3,"detail":"fn create_process(with_path string, with_args []string) ?ProcessInformation","insertText":"create_process($0, $1)","insertTextFormat":2},{"label":"is_procss_open","kind":3,"detail":"fn is_procss_open(with_name string) bool","insertText":"is_procss_open($0)","insertTextFormat":2},{"label":"C.PROCESSENTRY32W","kind":22,"detail":"struct C.PROCESSENTRY32W","insertText":"C.PROCESSENTRY32W{dwSize:$1, cntUsage:$2, th32ProcessID:$3, th32DefaultHeapID:$4, th32ModuleID:$5, cntThreads:$6, th32ParentProcessID:$7, pcPriClassBase:$8, dwFlags:$9, szExeFile:$10}","insertTextFormat":2},{"label":"C.THREADENTRY32","kind":22,"detail":"struct C.THREADENTRY32","insertText":"C.THREADENTRY32{dwSize:$1, cntUsage:$2, th32ThreadID:$3, th32OwnerProcessID:$4, tpBasePri:$5, tpDeltaPri:$6, dwFlags:$7}","insertTextFormat":2},{"label":"FloatingSaveArea","kind":22,"detail":"struct FloatingSaveArea","insertText":"FloatingSaveArea{control_word:$1, status_word:$2, tag_word:$3, error_offset:$4, error_selector:$5, data_offset:$6, data_selector:$7, register_area:$8, spare0:$9}","insertTextFormat":2},{"label":"ImageDosHeader","kind":22,"detail":"struct ImageDosHeader","insertText":"ImageDosHeader{e_magic:$1, e_cblp:$2, e_cp:$3, e_crlc:$4, e_cparhdr:$5, e_minalloc:$6, e_maxalloc:$7, e_ss:$8, e_sp:$9, e_csum:$10, e_ip:$11, e_cs:$12, e_lfarlc:$13, e_ovno:$14, e_res:$15, e_oemid:$16, e_oeminfo:$17, e_res2:$18, e_lfanew:$19}","insertTextFormat":2},{"label":"ImageDataDirectory","kind":22,"detail":"struct ImageDataDirectory","insertText":"ImageDataDirectory{virtual_address:$1, size:$2}","insertTextFormat":2},{"label":"ImageOptionalHeader","kind":22,"detail":"struct ImageOptionalHeader","insertText":"ImageOptionalHeader{magic:$1, major_linker_version:$2, minor_linker_version:$3, size_of_code:$4, size_of_initialized_data:$5, size_of_uninitialized_data:$6, address_of_entry_point:$7, base_of_code:$8, base_of_data:$9, image_base:$10, section_alignment:$11, file_alignment:$12, major_operating_system_version:$13, minor_operating_system_version:$14, major_image_version:$15, minor_image_version:$16, major_subsystem_version:$17, minor_subsystem_version:$18, win32_version_value:$19, size_of_image:$20, size_of_headers:$21, check_sum:$22, subsystem:$23, dll_characteristics:$24, size_of_stack_reserve:$25, size_of_stack_commit:$26, size_of_heap_reserve:$27, size_of_heap_commit:$28, loader_flags:$29, number_of_rva_and_sizes:$30, data_directory:$31}","insertTextFormat":2},{"label":"ImageFileHeader","kind":22,"detail":"struct ImageFileHeader","insertText":"ImageFileHeader{machine:$1, number_of_sections:$2, time_date_stamp:$3, pointer_to_symbol_table:$4, number_of_symbols:$5, size_of_optional_header:$6, characteristics:$7}","insertTextFormat":2},{"label":"ImageNtHeaders","kind":22,"detail":"struct ImageNtHeaders","insertText":"ImageNtHeaders{signature:$1, file_header:$2, optional_header:$3}","insertTextFormat":2},{"label":"ImageSectionHeader","kind":22,"detail":"struct ImageSectionHeader","insertText":"ImageSectionHeader{name:$1, physical_address:$2, virtual_size_or_address:$3, size_of_raw_data:$4, pointer_to_raw_data:$5, pointer_to_relocations:$6, pointer_to_linenumbers:$7, number_of_relocations:$8, number_of_linenumbers:$9, characteristics:$10}","insertTextFormat":2},{"label":"ImageBaseRelocation","kind":22,"detail":"struct ImageBaseRelocation","insertText":"ImageBaseRelocation{virtual_address:$1, size_of_block:$2}","insertTextFormat":2},{"label":"ImageImportDescriptor","kind":22,"detail":"struct ImageImportDescriptor","insertText":"ImageImportDescriptor{characteristics_or_og_first_thunks:$1, time_date_stamp:$2, forwarder_chain:$3, name:$4, first_thunks:$5}","insertTextFormat":2},{"label":"ImportImageByName","kind":22,"detail":"struct ImportImageByName","insertText":"ImportImageByName{hint:$1, name:$2}","insertTextFormat":2},{"label":"ImageTlsDirectory","kind":22,"detail":"struct ImageTlsDirectory","insertText":"ImageTlsDirectory{start_address_of_raw_data:$1, end_address_of_raw_data:$2, address_of_index:$3, address_of_callback:$4, size_of_zero_fill:$5, characteristics:$6}","insertTextFormat":2},{"label":"InjectData","kind":22,"detail":"struct InjectData","insertText":"InjectData{load_lib_a:$1, get_proc_addr:$2, h_mod:$3}","insertTextFormat":2},{"label":"map_dll_release","kind":3,"detail":"fn map_dll_release(hnd C.HANDLE, image voidptr, shellcode voidptr)","insertText":"map_dll_release($0, $1, $2)","insertTextFormat":2},{"label":"get_steam_path","kind":3,"detail":"fn get_steam_path() ?string","insertText":"get_steam_path()","insertTextFormat":1},{"label":"load_vac_bypass","kind":3,"detail":"fn load_vac_bypass() ?","insertText":"load_vac_bypass()","insertTextFormat":1},{"label":"map_dll","kind":3,"detail":"fn map_dll(hnd C.HANDLE, and_name string) ?(voidptr, voidptr, voidptr, voidptr)","insertText":"map_dll($0, $1)","insertTextFormat":2},{"label":"clean","kind":3,"detail":"fn clean(hnd C.HANDLE, target_base voidptr, shellcode voidptr, base_file_addr voidptr) ?","insertText":"clean($0, $1, $2, $3)","insertTextFormat":2},{"label":"string","kind":22,"detail":"pub struct string","insertText":"string","insertTextFormat":1},{"label":"array","kind":22,"detail":"pub struct array","insertText":"array","insertTextFormat":1},{"label":"map","kind":22,"detail":"pub struct map","insertText":"map","insertTextFormat":1},{"label":"IError","kind":8,"detail":"IError","insertText":"IError","insertTextFormat":1},{"label":"gc_check_leaks","kind":3,"detail":"pub fn gc_check_leaks()","insertText":"gc_check_leaks","insertTextFormat":1},{"label":"Error","kind":22,"detail":"pub struct Error","insertText":"Error","insertTextFormat":1},{"label":"str","kind":3,"detail":"pub fn str() string","insertText":"str","insertTextFormat":1},{"label":"copy","kind":3,"detail":"pub fn copy(mut dst []u8, src []u8) int","insertText":"copy","insertTextFormat":1},{"label":"utf8_getchar","kind":3,"detail":"pub fn utf8_getchar() int","insertText":"utf8_getchar","insertTextFormat":1},{"label":"utf8_char_len","kind":3,"detail":"pub fn utf8_char_len(b u8) int","insertText":"utf8_char_len","insertTextFormat":1},{"label":"utf32_to_str","kind":3,"detail":"pub fn utf32_to_str(code u32) string","insertText":"utf32_to_str","insertTextFormat":1},{"label":"utf8_str_visible_length","kind":3,"detail":"pub fn utf8_str_visible_length(s string) int","insertText":"utf8_str_visible_length","insertTextFormat":1},{"label":"SortedMap","kind":22,"detail":"pub struct SortedMap","insertText":"SortedMap","insertTextFormat":1},{"label":"compare_strings","kind":3,"detail":"pub fn compare_strings(a &string, b &string) int","insertText":"compare_strings","insertTextFormat":1},{"label":"c_error_number_str","kind":3,"detail":"pub fn c_error_number_str(errnum int) string","insertText":"c_error_number_str","insertTextFormat":1},{"label":"eprintln","kind":3,"detail":"pub fn eprintln(s string)","insertText":"eprintln","insertTextFormat":1},{"label":"eprint","kind":3,"detail":"pub fn eprint(s string)","insertText":"eprint","insertTextFormat":1},{"label":"flush_stdout","kind":3,"detail":"pub fn flush_stdout()","insertText":"flush_stdout","insertTextFormat":1},{"label":"flush_stderr","kind":3,"detail":"pub fn flush_stderr()","insertText":"flush_stderr","insertTextFormat":1},{"label":"vcalloc","kind":3,"detail":"pub fn vcalloc(n isize) &u8","insertText":"vcalloc","insertTextFormat":1},{"label":"vcalloc_noscan","kind":3,"detail":"pub fn vcalloc_noscan(n isize) &u8","insertText":"vcalloc_noscan","insertTextFormat":1},{"label":"print_backtrace","kind":3,"detail":"pub fn print_backtrace()","insertText":"print_backtrace","insertTextFormat":1},{"label":"StrIntpMem","kind":22,"detail":"pub struct StrIntpMem","insertText":"StrIntpMem","insertTextFormat":1},{"label":"get_str_intp_u64_format","kind":3,"detail":"pub fn get_str_intp_u64_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u64","insertText":"get_str_intp_u64_format","insertTextFormat":1},{"label":"get_str_intp_u32_format","kind":3,"detail":"pub fn get_str_intp_u32_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u32","insertText":"get_str_intp_u32_format","insertTextFormat":1},{"label":"StrIntpData","kind":22,"detail":"pub struct StrIntpData","insertText":"StrIntpData","insertTextFormat":1},{"label":"StrIntpCgenData","kind":22,"detail":"pub struct StrIntpCgenData","insertText":"StrIntpCgenData","insertTextFormat":1},{"label":"si_s_code","kind":6,"detail":"pub const si_s_code string","insertText":"si_s_code","insertTextFormat":1},{"label":"si_g32_code","kind":6,"detail":"pub const si_g32_code string","insertText":"si_g32_code","insertTextFormat":1},{"label":"si_g64_code","kind":6,"detail":"pub const si_g64_code string","insertText":"si_g64_code","insertTextFormat":1},{"label":"VAssertMetaInfo","kind":22,"detail":"pub struct VAssertMetaInfo","insertText":"VAssertMetaInfo","insertTextFormat":1},{"label":"MethodArgs","kind":22,"detail":"pub struct MethodArgs","insertText":"MethodArgs","insertTextFormat":1},{"label":"FunctionData","kind":22,"detail":"pub struct FunctionData","insertText":"FunctionData","insertTextFormat":1},{"label":"FieldData","kind":22,"detail":"pub struct FieldData","insertText":"FieldData","insertTextFormat":1},{"label":"StructAttribute","kind":22,"detail":"pub struct StructAttribute","insertText":"StructAttribute","insertTextFormat":1},{"label":"ptr_str","kind":3,"detail":"pub fn ptr_str(ptr voidptr) string","insertText":"ptr_str","insertTextFormat":1}]},"timestamp":1664350508}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350508}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350509}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350509}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":3,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":32,"line":122},"context":{"triggerCharacter":".","triggerKind":2}}},"timestamp":1664350509}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":3,"result":[]},"timestamp":1664350509}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350509}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":4,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":33,"line":122},"context":{"triggerKind":1}}},"timestamp":1664350509}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":4,"result":[{"label":"rand","kind":9,"detail":"","insertText":"rand","insertTextFormat":1},{"label":"embed_file","kind":9,"detail":"","insertText":"embed_file","insertTextFormat":1},{"label":"C","kind":9,"detail":"C symbol definitions","insertText":"C.","insertTextFormat":1},{"label":"err","kind":6,"detail":"err IError","insertText":"err","insertTextFormat":1},{"label":"err","kind":6,"detail":"err IError","insertText":"err","insertTextFormat":1},{"label":"hnd","kind":6,"detail":"hnd C.HANDLE","insertText":"hnd","insertTextFormat":1},{"label":"target_base","kind":6,"detail":"target_base voidptr","insertText":"target_base","insertTextFormat":1},{"label":"shellcode","kind":6,"detail":"shellcode voidptr","insertText":"shellcode","insertTextFormat":1},{"label":"base_file_addr","kind":6,"detail":"base_file_addr voidptr","insertText":"base_file_addr","insertTextFormat":1},{"label":"junk","kind":6,"detail":"mut junk","insertText":"junk","insertTextFormat":1},{"label":"img_dos","kind":6,"detail":"img_dos","insertText":"img_dos","insertTextFormat":1},{"label":"nt_header","kind":6,"detail":"nt_header","insertText":"nt_header","insertTextFormat":1},{"label":"section_header","kind":6,"detail":"mut section_header","insertText":"section_header","insertTextFormat":1},{"label":"thread_hijacking_release","kind":3,"detail":"fn thread_hijacking_release(hnd_t C.HANDLE, hnd C.HANDLE, code_cave_addr voidptr, resume bool)","insertText":"thread_hijacking_release($0, $1, $2, $3)","insertTextFormat":2},{"label":"call_dll_main_via_thread_hijacking","kind":3,"detail":"fn call_dll_main_via_thread_hijacking(hnd C.HANDLE, proc_id u32, routine voidptr, args voidptr) ?","insertText":"call_dll_main_via_thread_hijacking($0, $1, $2, $3)","insertTextFormat":2},{"label":"ThreadContext","kind":22,"detail":"struct ThreadContext","insertText":"ThreadContext{context_flags:$1, dr0:$2, dr1:$3, dr2:$4, dr3:$5, dr6:$6, dr7:$7, float_save:$8, seg_gs:$9, seg_fs:$10, seg_es:$11, seg_ds:$12, edi:$13, esi:$14, ebx:$15, edx:$16, ecx:$17, eax:$18, ebp:$19, eip:$20, seg_cs:$21, e_flags:$22, esp:$23, seg_ss:$24, extended_registers:$25}","insertTextFormat":2},{"label":"old_thread_context","kind":6,"detail":"mut old_thread_context ThreadContext","insertText":"old_thread_context","insertTextFormat":1},{"label":"code_cave","kind":6,"detail":"code_cave","insertText":"code_cave","insertTextFormat":1},{"label":"shellcode_t","kind":6,"detail":"mut shellcode_t","insertText":"shellcode_t","insertTextFormat":1},{"label":"fn_offset","kind":6,"detail":"fn_offset","insertText":"fn_offset","insertTextFormat":1},{"label":"check_byte_offset","kind":6,"detail":"check_byte_offset int","insertText":"check_byte_offset","insertTextFormat":1},{"label":"shellcode_data","kind":6,"detail":"shellcode_data","insertText":"shellcode_data","insertTextFormat":1},{"label":"a","kind":6,"detail":"mut a","insertText":"a","insertTextFormat":1},{"label":"b","kind":6,"detail":"mut b","insertText":"b","insertTextFormat":1},{"label":"c","kind":6,"detail":"mut c","insertText":"c","insertTextFormat":1},{"label":"d","kind":6,"detail":"mut d","insertText":"d","insertTextFormat":1},{"label":"e","kind":6,"detail":"mut e","insertText":"e","insertTextFormat":1},{"label":"r","kind":3,"detail":"pub fn r(fromProc C.HANDLE, atAddr voidptr) ?T","insertText":"r($0, $1)","insertTextFormat":2},{"label":"w","kind":3,"detail":"pub fn w(fromProc C.HANDLE, atAddr voidptr, withData &T) ?","insertText":"w($0, $1, $2)","insertTextFormat":2},{"label":"wr","kind":3,"detail":"pub fn wr(fromProc C.HANDLE, atAddr voidptr, withData voidptr, andSize u32) ?","insertText":"wr($0, $1, $2, $3)","insertTextFormat":2},{"label":"rar","kind":3,"detail":"pub fn rar(fromProc C.HANDLE, atAddr voidptr, andSize u32, output []T) ?","insertText":"rar($0, $1, $2, $3)","insertTextFormat":2},{"label":"wa","kind":3,"detail":"pub fn wa(fromProc C.HANDLE, atAddr voidptr, withData []T) ?","insertText":"wa($0, $1, $2)","insertTextFormat":2},{"label":"target_name","kind":6,"detail":"const target_name string","insertText":"target_name","insertTextFormat":1},{"label":"to_clear","kind":6,"detail":"const to_clear []string","insertText":"to_clear","insertTextFormat":1},{"label":"Thread","kind":22,"detail":"struct Thread","insertText":"Thread{id:$1, process_owner_id:$2, priority:$3}","insertTextFormat":2},{"label":"Process","kind":22,"detail":"struct Process","insertText":"Process{name:$1, id:$2}","insertTextFormat":2},{"label":"get_process","kind":3,"detail":"fn get_process(with_process_name string) ?Process","insertText":"get_process($0)","insertTextFormat":2},{"label":"get_thread","kind":3,"detail":"fn get_thread(with_process_id u32) ?Thread","insertText":"get_thread($0)","insertTextFormat":2},{"label":"kill_process","kind":3,"detail":"fn kill_process(with_name string) ?","insertText":"kill_process($0)","insertTextFormat":2},{"label":"ProcessInformation","kind":22,"detail":"struct ProcessInformation","insertText":"ProcessInformation{h_process:$1, h_thread:$2, process_id:$3, thread_id:$4}","insertTextFormat":2},{"label":"StartupInfoA","kind":22,"detail":"struct StartupInfoA","insertText":"StartupInfoA{cb:$1, reserved:$2, desktop:$3, title:$4, x:$5, y:$6, x_size:$7, y_size:$8, x_count_chars:$9, y_count_chars:$10, fill_attribute:$11, flags:$12, show_window:$13, reserved_2:$14, reserved_3:$15, std_input:$16, std_output:$17, std_error:$18}","insertTextFormat":2},{"label":"create_process","kind":3,"detail":"fn create_process(with_path string, with_args []string) ?ProcessInformation","insertText":"create_process($0, $1)","insertTextFormat":2},{"label":"is_procss_open","kind":3,"detail":"fn is_procss_open(with_name string) bool","insertText":"is_procss_open($0)","insertTextFormat":2},{"label":"C.PROCESSENTRY32W","kind":22,"detail":"struct C.PROCESSENTRY32W","insertText":"C.PROCESSENTRY32W{dwSize:$1, cntUsage:$2, th32ProcessID:$3, th32DefaultHeapID:$4, th32ModuleID:$5, cntThreads:$6, th32ParentProcessID:$7, pcPriClassBase:$8, dwFlags:$9, szExeFile:$10}","insertTextFormat":2},{"label":"C.THREADENTRY32","kind":22,"detail":"struct C.THREADENTRY32","insertText":"C.THREADENTRY32{dwSize:$1, cntUsage:$2, th32ThreadID:$3, th32OwnerProcessID:$4, tpBasePri:$5, tpDeltaPri:$6, dwFlags:$7}","insertTextFormat":2},{"label":"FloatingSaveArea","kind":22,"detail":"struct FloatingSaveArea","insertText":"FloatingSaveArea{control_word:$1, status_word:$2, tag_word:$3, error_offset:$4, error_selector:$5, data_offset:$6, data_selector:$7, register_area:$8, spare0:$9}","insertTextFormat":2},{"label":"ImageDosHeader","kind":22,"detail":"struct ImageDosHeader","insertText":"ImageDosHeader{e_magic:$1, e_cblp:$2, e_cp:$3, e_crlc:$4, e_cparhdr:$5, e_minalloc:$6, e_maxalloc:$7, e_ss:$8, e_sp:$9, e_csum:$10, e_ip:$11, e_cs:$12, e_lfarlc:$13, e_ovno:$14, e_res:$15, e_oemid:$16, e_oeminfo:$17, e_res2:$18, e_lfanew:$19}","insertTextFormat":2},{"label":"ImageDataDirectory","kind":22,"detail":"struct ImageDataDirectory","insertText":"ImageDataDirectory{virtual_address:$1, size:$2}","insertTextFormat":2},{"label":"ImageOptionalHeader","kind":22,"detail":"struct ImageOptionalHeader","insertText":"ImageOptionalHeader{magic:$1, major_linker_version:$2, minor_linker_version:$3, size_of_code:$4, size_of_initialized_data:$5, size_of_uninitialized_data:$6, address_of_entry_point:$7, base_of_code:$8, base_of_data:$9, image_base:$10, section_alignment:$11, file_alignment:$12, major_operating_system_version:$13, minor_operating_system_version:$14, major_image_version:$15, minor_image_version:$16, major_subsystem_version:$17, minor_subsystem_version:$18, win32_version_value:$19, size_of_image:$20, size_of_headers:$21, check_sum:$22, subsystem:$23, dll_characteristics:$24, size_of_stack_reserve:$25, size_of_stack_commit:$26, size_of_heap_reserve:$27, size_of_heap_commit:$28, loader_flags:$29, number_of_rva_and_sizes:$30, data_directory:$31}","insertTextFormat":2},{"label":"ImageFileHeader","kind":22,"detail":"struct ImageFileHeader","insertText":"ImageFileHeader{machine:$1, number_of_sections:$2, time_date_stamp:$3, pointer_to_symbol_table:$4, number_of_symbols:$5, size_of_optional_header:$6, characteristics:$7}","insertTextFormat":2},{"label":"ImageNtHeaders","kind":22,"detail":"struct ImageNtHeaders","insertText":"ImageNtHeaders{signature:$1, file_header:$2, optional_header:$3}","insertTextFormat":2},{"label":"ImageSectionHeader","kind":22,"detail":"struct ImageSectionHeader","insertText":"ImageSectionHeader{name:$1, physical_address:$2, virtual_size_or_address:$3, size_of_raw_data:$4, pointer_to_raw_data:$5, pointer_to_relocations:$6, pointer_to_linenumbers:$7, number_of_relocations:$8, number_of_linenumbers:$9, characteristics:$10}","insertTextFormat":2},{"label":"ImageBaseRelocation","kind":22,"detail":"struct ImageBaseRelocation","insertText":"ImageBaseRelocation{virtual_address:$1, size_of_block:$2}","insertTextFormat":2},{"label":"ImageImportDescriptor","kind":22,"detail":"struct ImageImportDescriptor","insertText":"ImageImportDescriptor{characteristics_or_og_first_thunks:$1, time_date_stamp:$2, forwarder_chain:$3, name:$4, first_thunks:$5}","insertTextFormat":2},{"label":"ImportImageByName","kind":22,"detail":"struct ImportImageByName","insertText":"ImportImageByName{hint:$1, name:$2}","insertTextFormat":2},{"label":"ImageTlsDirectory","kind":22,"detail":"struct ImageTlsDirectory","insertText":"ImageTlsDirectory{start_address_of_raw_data:$1, end_address_of_raw_data:$2, address_of_index:$3, address_of_callback:$4, size_of_zero_fill:$5, characteristics:$6}","insertTextFormat":2},{"label":"InjectData","kind":22,"detail":"struct InjectData","insertText":"InjectData{load_lib_a:$1, get_proc_addr:$2, h_mod:$3}","insertTextFormat":2},{"label":"map_dll_release","kind":3,"detail":"fn map_dll_release(hnd C.HANDLE, image voidptr, shellcode voidptr)","insertText":"map_dll_release($0, $1, $2)","insertTextFormat":2},{"label":"get_steam_path","kind":3,"detail":"fn get_steam_path() ?string","insertText":"get_steam_path()","insertTextFormat":1},{"label":"load_vac_bypass","kind":3,"detail":"fn load_vac_bypass() ?","insertText":"load_vac_bypass()","insertTextFormat":1},{"label":"map_dll","kind":3,"detail":"fn map_dll(hnd C.HANDLE, and_name string) ?(voidptr, voidptr, voidptr, voidptr)","insertText":"map_dll($0, $1)","insertTextFormat":2},{"label":"clean","kind":3,"detail":"fn clean(hnd C.HANDLE, target_base voidptr, shellcode voidptr, base_file_addr voidptr) ?","insertText":"clean($0, $1, $2, $3)","insertTextFormat":2},{"label":"string","kind":22,"detail":"pub struct string","insertText":"string","insertTextFormat":1},{"label":"array","kind":22,"detail":"pub struct array","insertText":"array","insertTextFormat":1},{"label":"map","kind":22,"detail":"pub struct map","insertText":"map","insertTextFormat":1},{"label":"IError","kind":8,"detail":"IError","insertText":"IError","insertTextFormat":1},{"label":"gc_check_leaks","kind":3,"detail":"pub fn gc_check_leaks()","insertText":"gc_check_leaks","insertTextFormat":1},{"label":"Error","kind":22,"detail":"pub struct Error","insertText":"Error","insertTextFormat":1},{"label":"str","kind":3,"detail":"pub fn str() string","insertText":"str","insertTextFormat":1},{"label":"copy","kind":3,"detail":"pub fn copy(mut dst []u8, src []u8) int","insertText":"copy","insertTextFormat":1},{"label":"utf8_getchar","kind":3,"detail":"pub fn utf8_getchar() int","insertText":"utf8_getchar","insertTextFormat":1},{"label":"utf8_char_len","kind":3,"detail":"pub fn utf8_char_len(b u8) int","insertText":"utf8_char_len","insertTextFormat":1},{"label":"utf32_to_str","kind":3,"detail":"pub fn utf32_to_str(code u32) string","insertText":"utf32_to_str","insertTextFormat":1},{"label":"utf8_str_visible_length","kind":3,"detail":"pub fn utf8_str_visible_length(s string) int","insertText":"utf8_str_visible_length","insertTextFormat":1},{"label":"SortedMap","kind":22,"detail":"pub struct SortedMap","insertText":"SortedMap","insertTextFormat":1},{"label":"compare_strings","kind":3,"detail":"pub fn compare_strings(a &string, b &string) int","insertText":"compare_strings","insertTextFormat":1},{"label":"c_error_number_str","kind":3,"detail":"pub fn c_error_number_str(errnum int) string","insertText":"c_error_number_str","insertTextFormat":1},{"label":"eprintln","kind":3,"detail":"pub fn eprintln(s string)","insertText":"eprintln","insertTextFormat":1},{"label":"eprint","kind":3,"detail":"pub fn eprint(s string)","insertText":"eprint","insertTextFormat":1},{"label":"flush_stdout","kind":3,"detail":"pub fn flush_stdout()","insertText":"flush_stdout","insertTextFormat":1},{"label":"flush_stderr","kind":3,"detail":"pub fn flush_stderr()","insertText":"flush_stderr","insertTextFormat":1},{"label":"vcalloc","kind":3,"detail":"pub fn vcalloc(n isize) &u8","insertText":"vcalloc","insertTextFormat":1},{"label":"vcalloc_noscan","kind":3,"detail":"pub fn vcalloc_noscan(n isize) &u8","insertText":"vcalloc_noscan","insertTextFormat":1},{"label":"print_backtrace","kind":3,"detail":"pub fn print_backtrace()","insertText":"print_backtrace","insertTextFormat":1},{"label":"StrIntpMem","kind":22,"detail":"pub struct StrIntpMem","insertText":"StrIntpMem","insertTextFormat":1},{"label":"get_str_intp_u64_format","kind":3,"detail":"pub fn get_str_intp_u64_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u64","insertText":"get_str_intp_u64_format","insertTextFormat":1},{"label":"get_str_intp_u32_format","kind":3,"detail":"pub fn get_str_intp_u32_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u32","insertText":"get_str_intp_u32_format","insertTextFormat":1},{"label":"StrIntpData","kind":22,"detail":"pub struct StrIntpData","insertText":"StrIntpData","insertTextFormat":1},{"label":"StrIntpCgenData","kind":22,"detail":"pub struct StrIntpCgenData","insertText":"StrIntpCgenData","insertTextFormat":1},{"label":"si_s_code","kind":6,"detail":"pub const si_s_code string","insertText":"si_s_code","insertTextFormat":1},{"label":"si_g32_code","kind":6,"detail":"pub const si_g32_code string","insertText":"si_g32_code","insertTextFormat":1},{"label":"si_g64_code","kind":6,"detail":"pub const si_g64_code string","insertText":"si_g64_code","insertTextFormat":1},{"label":"VAssertMetaInfo","kind":22,"detail":"pub struct VAssertMetaInfo","insertText":"VAssertMetaInfo","insertTextFormat":1},{"label":"MethodArgs","kind":22,"detail":"pub struct MethodArgs","insertText":"MethodArgs","insertTextFormat":1},{"label":"FunctionData","kind":22,"detail":"pub struct FunctionData","insertText":"FunctionData","insertTextFormat":1},{"label":"FieldData","kind":22,"detail":"pub struct FieldData","insertText":"FieldData","insertTextFormat":1},{"label":"StructAttribute","kind":22,"detail":"pub struct StructAttribute","insertText":"StructAttribute","insertTextFormat":1},{"label":"ptr_str","kind":3,"detail":"pub fn ptr_str(ptr voidptr) string","insertText":"ptr_str","insertTextFormat":1}]},"timestamp":1664350509}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350509}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350509}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350509}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350510}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350510}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350518}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350518}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350519}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350519}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":5,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":2,"line":33},"context":{"triggerKind":1}}},"timestamp":1664350519}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":5,"result":[{"label":"rand","kind":9,"detail":"","insertText":"rand","insertTextFormat":1},{"label":"embed_file","kind":9,"detail":"","insertText":"embed_file","insertTextFormat":1},{"label":"C","kind":9,"detail":"C symbol definitions","insertText":"C.","insertTextFormat":1},{"label":"err","kind":6,"detail":"err IError","insertText":"err","insertTextFormat":1},{"label":"hnd","kind":6,"detail":"hnd C.HANDLE","insertText":"hnd","insertTextFormat":1},{"label":"and_name","kind":6,"detail":"and_name string","insertText":"and_name","insertTextFormat":1},{"label":"file","kind":6,"detail":"mut file EmbedFileData","insertText":"file","insertTextFormat":1},{"label":"base_file_addr","kind":6,"detail":"base_file_addr &u8","insertText":"base_file_addr","insertTextFormat":1},{"label":"img_dos","kind":6,"detail":"img_dos","insertText":"img_dos","insertTextFormat":1},{"label":"nt_header","kind":6,"detail":"nt_header","insertText":"nt_header","insertTextFormat":1},{"label":"target_base","kind":6,"detail":"mut target_base","insertText":"target_base","insertTextFormat":1},{"label":"shell_code_addr","kind":6,"detail":"shell_code_addr","insertText":"shell_code_addr","insertTextFormat":1},{"label":"thread_hijacking_release","kind":3,"detail":"fn thread_hijacking_release(hnd_t C.HANDLE, hnd C.HANDLE, code_cave_addr voidptr, resume bool)","insertText":"thread_hijacking_release($0, $1, $2, $3)","insertTextFormat":2},{"label":"call_dll_main_via_thread_hijacking","kind":3,"detail":"fn call_dll_main_via_thread_hijacking(hnd C.HANDLE, proc_id u32, routine voidptr, args voidptr) ?","insertText":"call_dll_main_via_thread_hijacking($0, $1, $2, $3)","insertTextFormat":2},{"label":"ThreadContext","kind":22,"detail":"struct ThreadContext","insertText":"ThreadContext{context_flags:$1, dr0:$2, dr1:$3, dr2:$4, dr3:$5, dr6:$6, dr7:$7, float_save:$8, seg_gs:$9, seg_fs:$10, seg_es:$11, seg_ds:$12, edi:$13, esi:$14, ebx:$15, edx:$16, ecx:$17, eax:$18, ebp:$19, eip:$20, seg_cs:$21, e_flags:$22, esp:$23, seg_ss:$24, extended_registers:$25}","insertTextFormat":2},{"label":"old_thread_context","kind":6,"detail":"mut old_thread_context ThreadContext","insertText":"old_thread_context","insertTextFormat":1},{"label":"code_cave","kind":6,"detail":"code_cave","insertText":"code_cave","insertTextFormat":1},{"label":"shellcode_t","kind":6,"detail":"mut shellcode_t","insertText":"shellcode_t","insertTextFormat":1},{"label":"fn_offset","kind":6,"detail":"fn_offset","insertText":"fn_offset","insertTextFormat":1},{"label":"check_byte_offset","kind":6,"detail":"check_byte_offset int","insertText":"check_byte_offset","insertTextFormat":1},{"label":"shellcode_data","kind":6,"detail":"shellcode_data","insertText":"shellcode_data","insertTextFormat":1},{"label":"a","kind":6,"detail":"mut a","insertText":"a","insertTextFormat":1},{"label":"b","kind":6,"detail":"mut b","insertText":"b","insertTextFormat":1},{"label":"c","kind":6,"detail":"mut c","insertText":"c","insertTextFormat":1},{"label":"d","kind":6,"detail":"mut d","insertText":"d","insertTextFormat":1},{"label":"e","kind":6,"detail":"mut e","insertText":"e","insertTextFormat":1},{"label":"r","kind":3,"detail":"pub fn r(fromProc C.HANDLE, atAddr voidptr) ?T","insertText":"r($0, $1)","insertTextFormat":2},{"label":"w","kind":3,"detail":"pub fn w(fromProc C.HANDLE, atAddr voidptr, withData &T) ?","insertText":"w($0, $1, $2)","insertTextFormat":2},{"label":"wr","kind":3,"detail":"pub fn wr(fromProc C.HANDLE, atAddr voidptr, withData voidptr, andSize u32) ?","insertText":"wr($0, $1, $2, $3)","insertTextFormat":2},{"label":"rar","kind":3,"detail":"pub fn rar(fromProc C.HANDLE, atAddr voidptr, andSize u32, output []T) ?","insertText":"rar($0, $1, $2, $3)","insertTextFormat":2},{"label":"wa","kind":3,"detail":"pub fn wa(fromProc C.HANDLE, atAddr voidptr, withData []T) ?","insertText":"wa($0, $1, $2)","insertTextFormat":2},{"label":"target_name","kind":6,"detail":"const target_name string","insertText":"target_name","insertTextFormat":1},{"label":"to_clear","kind":6,"detail":"const to_clear []string","insertText":"to_clear","insertTextFormat":1},{"label":"Thread","kind":22,"detail":"struct Thread","insertText":"Thread{id:$1, process_owner_id:$2, priority:$3}","insertTextFormat":2},{"label":"Process","kind":22,"detail":"struct Process","insertText":"Process{name:$1, id:$2}","insertTextFormat":2},{"label":"get_process","kind":3,"detail":"fn get_process(with_process_name string) ?Process","insertText":"get_process($0)","insertTextFormat":2},{"label":"get_thread","kind":3,"detail":"fn get_thread(with_process_id u32) ?Thread","insertText":"get_thread($0)","insertTextFormat":2},{"label":"kill_process","kind":3,"detail":"fn kill_process(with_name string) ?","insertText":"kill_process($0)","insertTextFormat":2},{"label":"ProcessInformation","kind":22,"detail":"struct ProcessInformation","insertText":"ProcessInformation{h_process:$1, h_thread:$2, process_id:$3, thread_id:$4}","insertTextFormat":2},{"label":"StartupInfoA","kind":22,"detail":"struct StartupInfoA","insertText":"StartupInfoA{cb:$1, reserved:$2, desktop:$3, title:$4, x:$5, y:$6, x_size:$7, y_size:$8, x_count_chars:$9, y_count_chars:$10, fill_attribute:$11, flags:$12, show_window:$13, reserved_2:$14, reserved_3:$15, std_input:$16, std_output:$17, std_error:$18}","insertTextFormat":2},{"label":"create_process","kind":3,"detail":"fn create_process(with_path string, with_args []string) ?ProcessInformation","insertText":"create_process($0, $1)","insertTextFormat":2},{"label":"is_procss_open","kind":3,"detail":"fn is_procss_open(with_name string) bool","insertText":"is_procss_open($0)","insertTextFormat":2},{"label":"C.PROCESSENTRY32W","kind":22,"detail":"struct C.PROCESSENTRY32W","insertText":"C.PROCESSENTRY32W{dwSize:$1, cntUsage:$2, th32ProcessID:$3, th32DefaultHeapID:$4, th32ModuleID:$5, cntThreads:$6, th32ParentProcessID:$7, pcPriClassBase:$8, dwFlags:$9, szExeFile:$10}","insertTextFormat":2},{"label":"C.THREADENTRY32","kind":22,"detail":"struct C.THREADENTRY32","insertText":"C.THREADENTRY32{dwSize:$1, cntUsage:$2, th32ThreadID:$3, th32OwnerProcessID:$4, tpBasePri:$5, tpDeltaPri:$6, dwFlags:$7}","insertTextFormat":2},{"label":"FloatingSaveArea","kind":22,"detail":"struct FloatingSaveArea","insertText":"FloatingSaveArea{control_word:$1, status_word:$2, tag_word:$3, error_offset:$4, error_selector:$5, data_offset:$6, data_selector:$7, register_area:$8, spare0:$9}","insertTextFormat":2},{"label":"ImageDosHeader","kind":22,"detail":"struct ImageDosHeader","insertText":"ImageDosHeader{e_magic:$1, e_cblp:$2, e_cp:$3, e_crlc:$4, e_cparhdr:$5, e_minalloc:$6, e_maxalloc:$7, e_ss:$8, e_sp:$9, e_csum:$10, e_ip:$11, e_cs:$12, e_lfarlc:$13, e_ovno:$14, e_res:$15, e_oemid:$16, e_oeminfo:$17, e_res2:$18, e_lfanew:$19}","insertTextFormat":2},{"label":"ImageDataDirectory","kind":22,"detail":"struct ImageDataDirectory","insertText":"ImageDataDirectory{virtual_address:$1, size:$2}","insertTextFormat":2},{"label":"ImageOptionalHeader","kind":22,"detail":"struct ImageOptionalHeader","insertText":"ImageOptionalHeader{magic:$1, major_linker_version:$2, minor_linker_version:$3, size_of_code:$4, size_of_initialized_data:$5, size_of_uninitialized_data:$6, address_of_entry_point:$7, base_of_code:$8, base_of_data:$9, image_base:$10, section_alignment:$11, file_alignment:$12, major_operating_system_version:$13, minor_operating_system_version:$14, major_image_version:$15, minor_image_version:$16, major_subsystem_version:$17, minor_subsystem_version:$18, win32_version_value:$19, size_of_image:$20, size_of_headers:$21, check_sum:$22, subsystem:$23, dll_characteristics:$24, size_of_stack_reserve:$25, size_of_stack_commit:$26, size_of_heap_reserve:$27, size_of_heap_commit:$28, loader_flags:$29, number_of_rva_and_sizes:$30, data_directory:$31}","insertTextFormat":2},{"label":"ImageFileHeader","kind":22,"detail":"struct ImageFileHeader","insertText":"ImageFileHeader{machine:$1, number_of_sections:$2, time_date_stamp:$3, pointer_to_symbol_table:$4, number_of_symbols:$5, size_of_optional_header:$6, characteristics:$7}","insertTextFormat":2},{"label":"ImageNtHeaders","kind":22,"detail":"struct ImageNtHeaders","insertText":"ImageNtHeaders{signature:$1, file_header:$2, optional_header:$3}","insertTextFormat":2},{"label":"ImageSectionHeader","kind":22,"detail":"struct ImageSectionHeader","insertText":"ImageSectionHeader{name:$1, physical_address:$2, virtual_size_or_address:$3, size_of_raw_data:$4, pointer_to_raw_data:$5, pointer_to_relocations:$6, pointer_to_linenumbers:$7, number_of_relocations:$8, number_of_linenumbers:$9, characteristics:$10}","insertTextFormat":2},{"label":"ImageBaseRelocation","kind":22,"detail":"struct ImageBaseRelocation","insertText":"ImageBaseRelocation{virtual_address:$1, size_of_block:$2}","insertTextFormat":2},{"label":"ImageImportDescriptor","kind":22,"detail":"struct ImageImportDescriptor","insertText":"ImageImportDescriptor{characteristics_or_og_first_thunks:$1, time_date_stamp:$2, forwarder_chain:$3, name:$4, first_thunks:$5}","insertTextFormat":2},{"label":"ImportImageByName","kind":22,"detail":"struct ImportImageByName","insertText":"ImportImageByName{hint:$1, name:$2}","insertTextFormat":2},{"label":"ImageTlsDirectory","kind":22,"detail":"struct ImageTlsDirectory","insertText":"ImageTlsDirectory{start_address_of_raw_data:$1, end_address_of_raw_data:$2, address_of_index:$3, address_of_callback:$4, size_of_zero_fill:$5, characteristics:$6}","insertTextFormat":2},{"label":"InjectData","kind":22,"detail":"struct InjectData","insertText":"InjectData{load_lib_a:$1, get_proc_addr:$2, h_mod:$3}","insertTextFormat":2},{"label":"map_dll_release","kind":3,"detail":"fn map_dll_release(hnd C.HANDLE, image voidptr, shellcode voidptr)","insertText":"map_dll_release($0, $1, $2)","insertTextFormat":2},{"label":"get_steam_path","kind":3,"detail":"fn get_steam_path() ?string","insertText":"get_steam_path()","insertTextFormat":1},{"label":"load_vac_bypass","kind":3,"detail":"fn load_vac_bypass() ?","insertText":"load_vac_bypass()","insertTextFormat":1},{"label":"map_dll","kind":3,"detail":"fn map_dll(hnd C.HANDLE, and_name string) ?(voidptr, voidptr, voidptr, voidptr)","insertText":"map_dll($0, $1)","insertTextFormat":2},{"label":"clean","kind":3,"detail":"fn clean(hnd C.HANDLE, target_base voidptr, shellcode voidptr, base_file_addr voidptr) ?","insertText":"clean($0, $1, $2, $3)","insertTextFormat":2},{"label":"string","kind":22,"detail":"pub struct string","insertText":"string","insertTextFormat":1},{"label":"array","kind":22,"detail":"pub struct array","insertText":"array","insertTextFormat":1},{"label":"map","kind":22,"detail":"pub struct map","insertText":"map","insertTextFormat":1},{"label":"IError","kind":8,"detail":"IError","insertText":"IError","insertTextFormat":1},{"label":"gc_check_leaks","kind":3,"detail":"pub fn gc_check_leaks()","insertText":"gc_check_leaks","insertTextFormat":1},{"label":"Error","kind":22,"detail":"pub struct Error","insertText":"Error","insertTextFormat":1},{"label":"str","kind":3,"detail":"pub fn str() string","insertText":"str","insertTextFormat":1},{"label":"copy","kind":3,"detail":"pub fn copy(mut dst []u8, src []u8) int","insertText":"copy","insertTextFormat":1},{"label":"utf8_getchar","kind":3,"detail":"pub fn utf8_getchar() int","insertText":"utf8_getchar","insertTextFormat":1},{"label":"utf8_char_len","kind":3,"detail":"pub fn utf8_char_len(b u8) int","insertText":"utf8_char_len","insertTextFormat":1},{"label":"utf32_to_str","kind":3,"detail":"pub fn utf32_to_str(code u32) string","insertText":"utf32_to_str","insertTextFormat":1},{"label":"utf8_str_visible_length","kind":3,"detail":"pub fn utf8_str_visible_length(s string) int","insertText":"utf8_str_visible_length","insertTextFormat":1},{"label":"SortedMap","kind":22,"detail":"pub struct SortedMap","insertText":"SortedMap","insertTextFormat":1},{"label":"compare_strings","kind":3,"detail":"pub fn compare_strings(a &string, b &string) int","insertText":"compare_strings","insertTextFormat":1},{"label":"c_error_number_str","kind":3,"detail":"pub fn c_error_number_str(errnum int) string","insertText":"c_error_number_str","insertTextFormat":1},{"label":"eprintln","kind":3,"detail":"pub fn eprintln(s string)","insertText":"eprintln","insertTextFormat":1},{"label":"eprint","kind":3,"detail":"pub fn eprint(s string)","insertText":"eprint","insertTextFormat":1},{"label":"flush_stdout","kind":3,"detail":"pub fn flush_stdout()","insertText":"flush_stdout","insertTextFormat":1},{"label":"flush_stderr","kind":3,"detail":"pub fn flush_stderr()","insertText":"flush_stderr","insertTextFormat":1},{"label":"vcalloc","kind":3,"detail":"pub fn vcalloc(n isize) &u8","insertText":"vcalloc","insertTextFormat":1},{"label":"vcalloc_noscan","kind":3,"detail":"pub fn vcalloc_noscan(n isize) &u8","insertText":"vcalloc_noscan","insertTextFormat":1},{"label":"print_backtrace","kind":3,"detail":"pub fn print_backtrace()","insertText":"print_backtrace","insertTextFormat":1},{"label":"StrIntpMem","kind":22,"detail":"pub struct StrIntpMem","insertText":"StrIntpMem","insertTextFormat":1},{"label":"get_str_intp_u64_format","kind":3,"detail":"pub fn get_str_intp_u64_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u64","insertText":"get_str_intp_u64_format","insertTextFormat":1},{"label":"get_str_intp_u32_format","kind":3,"detail":"pub fn get_str_intp_u32_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u32","insertText":"get_str_intp_u32_format","insertTextFormat":1},{"label":"StrIntpData","kind":22,"detail":"pub struct StrIntpData","insertText":"StrIntpData","insertTextFormat":1},{"label":"StrIntpCgenData","kind":22,"detail":"pub struct StrIntpCgenData","insertText":"StrIntpCgenData","insertTextFormat":1},{"label":"si_s_code","kind":6,"detail":"pub const si_s_code string","insertText":"si_s_code","insertTextFormat":1},{"label":"si_g32_code","kind":6,"detail":"pub const si_g32_code string","insertText":"si_g32_code","insertTextFormat":1},{"label":"si_g64_code","kind":6,"detail":"pub const si_g64_code string","insertText":"si_g64_code","insertTextFormat":1},{"label":"VAssertMetaInfo","kind":22,"detail":"pub struct VAssertMetaInfo","insertText":"VAssertMetaInfo","insertTextFormat":1},{"label":"MethodArgs","kind":22,"detail":"pub struct MethodArgs","insertText":"MethodArgs","insertTextFormat":1},{"label":"FunctionData","kind":22,"detail":"pub struct FunctionData","insertText":"FunctionData","insertTextFormat":1},{"label":"FieldData","kind":22,"detail":"pub struct FieldData","insertText":"FieldData","insertTextFormat":1},{"label":"StructAttribute","kind":22,"detail":"pub struct StructAttribute","insertText":"StructAttribute","insertTextFormat":1},{"label":"ptr_str","kind":3,"detail":"pub fn ptr_str(ptr voidptr) string","insertText":"ptr_str","insertTextFormat":1}]},"timestamp":1664350519}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350519}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350520}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350520}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350520}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350520}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350521}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350521}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":6,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":29,"line":33},"context":{"triggerKind":1}}},"timestamp":1664350522}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":6,"result":[{"label":"rand","kind":9,"detail":"","insertText":"rand","insertTextFormat":1},{"label":"embed_file","kind":9,"detail":"","insertText":"embed_file","insertTextFormat":1},{"label":"C","kind":9,"detail":"C symbol definitions","insertText":"C.","insertTextFormat":1},{"label":"err","kind":6,"detail":"err IError","insertText":"err","insertTextFormat":1},{"label":"hnd","kind":6,"detail":"hnd C.HANDLE","insertText":"hnd","insertTextFormat":1},{"label":"and_name","kind":6,"detail":"and_name string","insertText":"and_name","insertTextFormat":1},{"label":"file","kind":6,"detail":"mut file EmbedFileData","insertText":"file","insertTextFormat":1},{"label":"base_file_addr","kind":6,"detail":"base_file_addr &u8","insertText":"base_file_addr","insertTextFormat":1},{"label":"img_dos","kind":6,"detail":"img_dos","insertText":"img_dos","insertTextFormat":1},{"label":"nt_header","kind":6,"detail":"nt_header","insertText":"nt_header","insertTextFormat":1},{"label":"target_base","kind":6,"detail":"mut target_base","insertText":"target_base","insertTextFormat":1},{"label":"shell_code_addr","kind":6,"detail":"shell_code_addr","insertText":"shell_code_addr","insertTextFormat":1},{"label":"thread_hijacking_release","kind":3,"detail":"fn thread_hijacking_release(hnd_t C.HANDLE, hnd C.HANDLE, code_cave_addr voidptr, resume bool)","insertText":"thread_hijacking_release($0, $1, $2, $3)","insertTextFormat":2},{"label":"call_dll_main_via_thread_hijacking","kind":3,"detail":"fn call_dll_main_via_thread_hijacking(hnd C.HANDLE, proc_id u32, routine voidptr, args voidptr) ?","insertText":"call_dll_main_via_thread_hijacking($0, $1, $2, $3)","insertTextFormat":2},{"label":"ThreadContext","kind":22,"detail":"struct ThreadContext","insertText":"ThreadContext{context_flags:$1, dr0:$2, dr1:$3, dr2:$4, dr3:$5, dr6:$6, dr7:$7, float_save:$8, seg_gs:$9, seg_fs:$10, seg_es:$11, seg_ds:$12, edi:$13, esi:$14, ebx:$15, edx:$16, ecx:$17, eax:$18, ebp:$19, eip:$20, seg_cs:$21, e_flags:$22, esp:$23, seg_ss:$24, extended_registers:$25}","insertTextFormat":2},{"label":"old_thread_context","kind":6,"detail":"mut old_thread_context ThreadContext","insertText":"old_thread_context","insertTextFormat":1},{"label":"code_cave","kind":6,"detail":"code_cave","insertText":"code_cave","insertTextFormat":1},{"label":"shellcode_t","kind":6,"detail":"mut shellcode_t","insertText":"shellcode_t","insertTextFormat":1},{"label":"fn_offset","kind":6,"detail":"fn_offset","insertText":"fn_offset","insertTextFormat":1},{"label":"check_byte_offset","kind":6,"detail":"check_byte_offset int","insertText":"check_byte_offset","insertTextFormat":1},{"label":"shellcode_data","kind":6,"detail":"shellcode_data","insertText":"shellcode_data","insertTextFormat":1},{"label":"a","kind":6,"detail":"mut a","insertText":"a","insertTextFormat":1},{"label":"b","kind":6,"detail":"mut b","insertText":"b","insertTextFormat":1},{"label":"c","kind":6,"detail":"mut c","insertText":"c","insertTextFormat":1},{"label":"d","kind":6,"detail":"mut d","insertText":"d","insertTextFormat":1},{"label":"e","kind":6,"detail":"mut e","insertText":"e","insertTextFormat":1},{"label":"r","kind":3,"detail":"pub fn r(fromProc C.HANDLE, atAddr voidptr) ?T","insertText":"r($0, $1)","insertTextFormat":2},{"label":"w","kind":3,"detail":"pub fn w(fromProc C.HANDLE, atAddr voidptr, withData &T) ?","insertText":"w($0, $1, $2)","insertTextFormat":2},{"label":"wr","kind":3,"detail":"pub fn wr(fromProc C.HANDLE, atAddr voidptr, withData voidptr, andSize u32) ?","insertText":"wr($0, $1, $2, $3)","insertTextFormat":2},{"label":"rar","kind":3,"detail":"pub fn rar(fromProc C.HANDLE, atAddr voidptr, andSize u32, output []T) ?","insertText":"rar($0, $1, $2, $3)","insertTextFormat":2},{"label":"wa","kind":3,"detail":"pub fn wa(fromProc C.HANDLE, atAddr voidptr, withData []T) ?","insertText":"wa($0, $1, $2)","insertTextFormat":2},{"label":"target_name","kind":6,"detail":"const target_name string","insertText":"target_name","insertTextFormat":1},{"label":"to_clear","kind":6,"detail":"const to_clear []string","insertText":"to_clear","insertTextFormat":1},{"label":"Thread","kind":22,"detail":"struct Thread","insertText":"Thread{id:$1, process_owner_id:$2, priority:$3}","insertTextFormat":2},{"label":"Process","kind":22,"detail":"struct Process","insertText":"Process{name:$1, id:$2}","insertTextFormat":2},{"label":"get_process","kind":3,"detail":"fn get_process(with_process_name string) ?Process","insertText":"get_process($0)","insertTextFormat":2},{"label":"get_thread","kind":3,"detail":"fn get_thread(with_process_id u32) ?Thread","insertText":"get_thread($0)","insertTextFormat":2},{"label":"kill_process","kind":3,"detail":"fn kill_process(with_name string) ?","insertText":"kill_process($0)","insertTextFormat":2},{"label":"ProcessInformation","kind":22,"detail":"struct ProcessInformation","insertText":"ProcessInformation{h_process:$1, h_thread:$2, process_id:$3, thread_id:$4}","insertTextFormat":2},{"label":"StartupInfoA","kind":22,"detail":"struct StartupInfoA","insertText":"StartupInfoA{cb:$1, reserved:$2, desktop:$3, title:$4, x:$5, y:$6, x_size:$7, y_size:$8, x_count_chars:$9, y_count_chars:$10, fill_attribute:$11, flags:$12, show_window:$13, reserved_2:$14, reserved_3:$15, std_input:$16, std_output:$17, std_error:$18}","insertTextFormat":2},{"label":"create_process","kind":3,"detail":"fn create_process(with_path string, with_args []string) ?ProcessInformation","insertText":"create_process($0, $1)","insertTextFormat":2},{"label":"is_procss_open","kind":3,"detail":"fn is_procss_open(with_name string) bool","insertText":"is_procss_open($0)","insertTextFormat":2},{"label":"C.PROCESSENTRY32W","kind":22,"detail":"struct C.PROCESSENTRY32W","insertText":"C.PROCESSENTRY32W{dwSize:$1, cntUsage:$2, th32ProcessID:$3, th32DefaultHeapID:$4, th32ModuleID:$5, cntThreads:$6, th32ParentProcessID:$7, pcPriClassBase:$8, dwFlags:$9, szExeFile:$10}","insertTextFormat":2},{"label":"C.THREADENTRY32","kind":22,"detail":"struct C.THREADENTRY32","insertText":"C.THREADENTRY32{dwSize:$1, cntUsage:$2, th32ThreadID:$3, th32OwnerProcessID:$4, tpBasePri:$5, tpDeltaPri:$6, dwFlags:$7}","insertTextFormat":2},{"label":"FloatingSaveArea","kind":22,"detail":"struct FloatingSaveArea","insertText":"FloatingSaveArea{control_word:$1, status_word:$2, tag_word:$3, error_offset:$4, error_selector:$5, data_offset:$6, data_selector:$7, register_area:$8, spare0:$9}","insertTextFormat":2},{"label":"ImageDosHeader","kind":22,"detail":"struct ImageDosHeader","insertText":"ImageDosHeader{e_magic:$1, e_cblp:$2, e_cp:$3, e_crlc:$4, e_cparhdr:$5, e_minalloc:$6, e_maxalloc:$7, e_ss:$8, e_sp:$9, e_csum:$10, e_ip:$11, e_cs:$12, e_lfarlc:$13, e_ovno:$14, e_res:$15, e_oemid:$16, e_oeminfo:$17, e_res2:$18, e_lfanew:$19}","insertTextFormat":2},{"label":"ImageDataDirectory","kind":22,"detail":"struct ImageDataDirectory","insertText":"ImageDataDirectory{virtual_address:$1, size:$2}","insertTextFormat":2},{"label":"ImageOptionalHeader","kind":22,"detail":"struct ImageOptionalHeader","insertText":"ImageOptionalHeader{magic:$1, major_linker_version:$2, minor_linker_version:$3, size_of_code:$4, size_of_initialized_data:$5, size_of_uninitialized_data:$6, address_of_entry_point:$7, base_of_code:$8, base_of_data:$9, image_base:$10, section_alignment:$11, file_alignment:$12, major_operating_system_version:$13, minor_operating_system_version:$14, major_image_version:$15, minor_image_version:$16, major_subsystem_version:$17, minor_subsystem_version:$18, win32_version_value:$19, size_of_image:$20, size_of_headers:$21, check_sum:$22, subsystem:$23, dll_characteristics:$24, size_of_stack_reserve:$25, size_of_stack_commit:$26, size_of_heap_reserve:$27, size_of_heap_commit:$28, loader_flags:$29, number_of_rva_and_sizes:$30, data_directory:$31}","insertTextFormat":2},{"label":"ImageFileHeader","kind":22,"detail":"struct ImageFileHeader","insertText":"ImageFileHeader{machine:$1, number_of_sections:$2, time_date_stamp:$3, pointer_to_symbol_table:$4, number_of_symbols:$5, size_of_optional_header:$6, characteristics:$7}","insertTextFormat":2},{"label":"ImageNtHeaders","kind":22,"detail":"struct ImageNtHeaders","insertText":"ImageNtHeaders{signature:$1, file_header:$2, optional_header:$3}","insertTextFormat":2},{"label":"ImageSectionHeader","kind":22,"detail":"struct ImageSectionHeader","insertText":"ImageSectionHeader{name:$1, physical_address:$2, virtual_size_or_address:$3, size_of_raw_data:$4, pointer_to_raw_data:$5, pointer_to_relocations:$6, pointer_to_linenumbers:$7, number_of_relocations:$8, number_of_linenumbers:$9, characteristics:$10}","insertTextFormat":2},{"label":"ImageBaseRelocation","kind":22,"detail":"struct ImageBaseRelocation","insertText":"ImageBaseRelocation{virtual_address:$1, size_of_block:$2}","insertTextFormat":2},{"label":"ImageImportDescriptor","kind":22,"detail":"struct ImageImportDescriptor","insertText":"ImageImportDescriptor{characteristics_or_og_first_thunks:$1, time_date_stamp:$2, forwarder_chain:$3, name:$4, first_thunks:$5}","insertTextFormat":2},{"label":"ImportImageByName","kind":22,"detail":"struct ImportImageByName","insertText":"ImportImageByName{hint:$1, name:$2}","insertTextFormat":2},{"label":"ImageTlsDirectory","kind":22,"detail":"struct ImageTlsDirectory","insertText":"ImageTlsDirectory{start_address_of_raw_data:$1, end_address_of_raw_data:$2, address_of_index:$3, address_of_callback:$4, size_of_zero_fill:$5, characteristics:$6}","insertTextFormat":2},{"label":"InjectData","kind":22,"detail":"struct InjectData","insertText":"InjectData{load_lib_a:$1, get_proc_addr:$2, h_mod:$3}","insertTextFormat":2},{"label":"map_dll_release","kind":3,"detail":"fn map_dll_release(hnd C.HANDLE, image voidptr, shellcode voidptr)","insertText":"map_dll_release($0, $1, $2)","insertTextFormat":2},{"label":"get_steam_path","kind":3,"detail":"fn get_steam_path() ?string","insertText":"get_steam_path()","insertTextFormat":1},{"label":"load_vac_bypass","kind":3,"detail":"fn load_vac_bypass() ?","insertText":"load_vac_bypass()","insertTextFormat":1},{"label":"map_dll","kind":3,"detail":"fn map_dll(hnd C.HANDLE, and_name string) ?(voidptr, voidptr, voidptr, voidptr)","insertText":"map_dll($0, $1)","insertTextFormat":2},{"label":"clean","kind":3,"detail":"fn clean(hnd C.HANDLE, target_base voidptr, shellcode voidptr, base_file_addr voidptr) ?","insertText":"clean($0, $1, $2, $3)","insertTextFormat":2},{"label":"string","kind":22,"detail":"pub struct string","insertText":"string","insertTextFormat":1},{"label":"array","kind":22,"detail":"pub struct array","insertText":"array","insertTextFormat":1},{"label":"map","kind":22,"detail":"pub struct map","insertText":"map","insertTextFormat":1},{"label":"IError","kind":8,"detail":"IError","insertText":"IError","insertTextFormat":1},{"label":"gc_check_leaks","kind":3,"detail":"pub fn gc_check_leaks()","insertText":"gc_check_leaks","insertTextFormat":1},{"label":"Error","kind":22,"detail":"pub struct Error","insertText":"Error","insertTextFormat":1},{"label":"str","kind":3,"detail":"pub fn str() string","insertText":"str","insertTextFormat":1},{"label":"copy","kind":3,"detail":"pub fn copy(mut dst []u8, src []u8) int","insertText":"copy","insertTextFormat":1},{"label":"utf8_getchar","kind":3,"detail":"pub fn utf8_getchar() int","insertText":"utf8_getchar","insertTextFormat":1},{"label":"utf8_char_len","kind":3,"detail":"pub fn utf8_char_len(b u8) int","insertText":"utf8_char_len","insertTextFormat":1},{"label":"utf32_to_str","kind":3,"detail":"pub fn utf32_to_str(code u32) string","insertText":"utf32_to_str","insertTextFormat":1},{"label":"utf8_str_visible_length","kind":3,"detail":"pub fn utf8_str_visible_length(s string) int","insertText":"utf8_str_visible_length","insertTextFormat":1},{"label":"SortedMap","kind":22,"detail":"pub struct SortedMap","insertText":"SortedMap","insertTextFormat":1},{"label":"compare_strings","kind":3,"detail":"pub fn compare_strings(a &string, b &string) int","insertText":"compare_strings","insertTextFormat":1},{"label":"c_error_number_str","kind":3,"detail":"pub fn c_error_number_str(errnum int) string","insertText":"c_error_number_str","insertTextFormat":1},{"label":"eprintln","kind":3,"detail":"pub fn eprintln(s string)","insertText":"eprintln","insertTextFormat":1},{"label":"eprint","kind":3,"detail":"pub fn eprint(s string)","insertText":"eprint","insertTextFormat":1},{"label":"flush_stdout","kind":3,"detail":"pub fn flush_stdout()","insertText":"flush_stdout","insertTextFormat":1},{"label":"flush_stderr","kind":3,"detail":"pub fn flush_stderr()","insertText":"flush_stderr","insertTextFormat":1},{"label":"vcalloc","kind":3,"detail":"pub fn vcalloc(n isize) &u8","insertText":"vcalloc","insertTextFormat":1},{"label":"vcalloc_noscan","kind":3,"detail":"pub fn vcalloc_noscan(n isize) &u8","insertText":"vcalloc_noscan","insertTextFormat":1},{"label":"print_backtrace","kind":3,"detail":"pub fn print_backtrace()","insertText":"print_backtrace","insertTextFormat":1},{"label":"StrIntpMem","kind":22,"detail":"pub struct StrIntpMem","insertText":"StrIntpMem","insertTextFormat":1},{"label":"get_str_intp_u64_format","kind":3,"detail":"pub fn get_str_intp_u64_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u64","insertText":"get_str_intp_u64_format","insertTextFormat":1},{"label":"get_str_intp_u32_format","kind":3,"detail":"pub fn get_str_intp_u32_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u32","insertText":"get_str_intp_u32_format","insertTextFormat":1},{"label":"StrIntpData","kind":22,"detail":"pub struct StrIntpData","insertText":"StrIntpData","insertTextFormat":1},{"label":"StrIntpCgenData","kind":22,"detail":"pub struct StrIntpCgenData","insertText":"StrIntpCgenData","insertTextFormat":1},{"label":"si_s_code","kind":6,"detail":"pub const si_s_code string","insertText":"si_s_code","insertTextFormat":1},{"label":"si_g32_code","kind":6,"detail":"pub const si_g32_code string","insertText":"si_g32_code","insertTextFormat":1},{"label":"si_g64_code","kind":6,"detail":"pub const si_g64_code string","insertText":"si_g64_code","insertTextFormat":1},{"label":"VAssertMetaInfo","kind":22,"detail":"pub struct VAssertMetaInfo","insertText":"VAssertMetaInfo","insertTextFormat":1},{"label":"MethodArgs","kind":22,"detail":"pub struct MethodArgs","insertText":"MethodArgs","insertTextFormat":1},{"label":"FunctionData","kind":22,"detail":"pub struct FunctionData","insertText":"FunctionData","insertTextFormat":1},{"label":"FieldData","kind":22,"detail":"pub struct FieldData","insertText":"FieldData","insertTextFormat":1},{"label":"StructAttribute","kind":22,"detail":"pub struct StructAttribute","insertText":"StructAttribute","insertTextFormat":1},{"label":"ptr_str","kind":3,"detail":"pub fn ptr_str(ptr voidptr) string","insertText":"ptr_str","insertTextFormat":1}]},"timestamp":1664350522}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350522}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350523}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350523}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":7,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":32,"line":33},"context":{"triggerCharacter":".","triggerKind":2}}},"timestamp":1664350523}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":7,"result":[]},"timestamp":1664350523}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350523}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":8,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":33,"line":33},"context":{"triggerKind":1}}},"timestamp":1664350523}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":8,"result":[{"label":"rand","kind":9,"detail":"","insertText":"rand","insertTextFormat":1},{"label":"embed_file","kind":9,"detail":"","insertText":"embed_file","insertTextFormat":1},{"label":"C","kind":9,"detail":"C symbol definitions","insertText":"C.","insertTextFormat":1},{"label":"err","kind":6,"detail":"err IError","insertText":"err","insertTextFormat":1},{"label":"hnd","kind":6,"detail":"hnd C.HANDLE","insertText":"hnd","insertTextFormat":1},{"label":"and_name","kind":6,"detail":"and_name string","insertText":"and_name","insertTextFormat":1},{"label":"file","kind":6,"detail":"mut file EmbedFileData","insertText":"file","insertTextFormat":1},{"label":"base_file_addr","kind":6,"detail":"base_file_addr &u8","insertText":"base_file_addr","insertTextFormat":1},{"label":"img_dos","kind":6,"detail":"img_dos","insertText":"img_dos","insertTextFormat":1},{"label":"nt_header","kind":6,"detail":"nt_header","insertText":"nt_header","insertTextFormat":1},{"label":"target_base","kind":6,"detail":"mut target_base","insertText":"target_base","insertTextFormat":1},{"label":"shell_code_addr","kind":6,"detail":"shell_code_addr","insertText":"shell_code_addr","insertTextFormat":1},{"label":"thread_hijacking_release","kind":3,"detail":"fn thread_hijacking_release(hnd_t C.HANDLE, hnd C.HANDLE, code_cave_addr voidptr, resume bool)","insertText":"thread_hijacking_release($0, $1, $2, $3)","insertTextFormat":2},{"label":"call_dll_main_via_thread_hijacking","kind":3,"detail":"fn call_dll_main_via_thread_hijacking(hnd C.HANDLE, proc_id u32, routine voidptr, args voidptr) ?","insertText":"call_dll_main_via_thread_hijacking($0, $1, $2, $3)","insertTextFormat":2},{"label":"ThreadContext","kind":22,"detail":"struct ThreadContext","insertText":"ThreadContext{context_flags:$1, dr0:$2, dr1:$3, dr2:$4, dr3:$5, dr6:$6, dr7:$7, float_save:$8, seg_gs:$9, seg_fs:$10, seg_es:$11, seg_ds:$12, edi:$13, esi:$14, ebx:$15, edx:$16, ecx:$17, eax:$18, ebp:$19, eip:$20, seg_cs:$21, e_flags:$22, esp:$23, seg_ss:$24, extended_registers:$25}","insertTextFormat":2},{"label":"old_thread_context","kind":6,"detail":"mut old_thread_context ThreadContext","insertText":"old_thread_context","insertTextFormat":1},{"label":"code_cave","kind":6,"detail":"code_cave","insertText":"code_cave","insertTextFormat":1},{"label":"shellcode_t","kind":6,"detail":"mut shellcode_t","insertText":"shellcode_t","insertTextFormat":1},{"label":"fn_offset","kind":6,"detail":"fn_offset","insertText":"fn_offset","insertTextFormat":1},{"label":"check_byte_offset","kind":6,"detail":"check_byte_offset int","insertText":"check_byte_offset","insertTextFormat":1},{"label":"shellcode_data","kind":6,"detail":"shellcode_data","insertText":"shellcode_data","insertTextFormat":1},{"label":"a","kind":6,"detail":"mut a","insertText":"a","insertTextFormat":1},{"label":"b","kind":6,"detail":"mut b","insertText":"b","insertTextFormat":1},{"label":"c","kind":6,"detail":"mut c","insertText":"c","insertTextFormat":1},{"label":"d","kind":6,"detail":"mut d","insertText":"d","insertTextFormat":1},{"label":"e","kind":6,"detail":"mut e","insertText":"e","insertTextFormat":1},{"label":"r","kind":3,"detail":"pub fn r(fromProc C.HANDLE, atAddr voidptr) ?T","insertText":"r($0, $1)","insertTextFormat":2},{"label":"w","kind":3,"detail":"pub fn w(fromProc C.HANDLE, atAddr voidptr, withData &T) ?","insertText":"w($0, $1, $2)","insertTextFormat":2},{"label":"wr","kind":3,"detail":"pub fn wr(fromProc C.HANDLE, atAddr voidptr, withData voidptr, andSize u32) ?","insertText":"wr($0, $1, $2, $3)","insertTextFormat":2},{"label":"rar","kind":3,"detail":"pub fn rar(fromProc C.HANDLE, atAddr voidptr, andSize u32, output []T) ?","insertText":"rar($0, $1, $2, $3)","insertTextFormat":2},{"label":"wa","kind":3,"detail":"pub fn wa(fromProc C.HANDLE, atAddr voidptr, withData []T) ?","insertText":"wa($0, $1, $2)","insertTextFormat":2},{"label":"target_name","kind":6,"detail":"const target_name string","insertText":"target_name","insertTextFormat":1},{"label":"to_clear","kind":6,"detail":"const to_clear []string","insertText":"to_clear","insertTextFormat":1},{"label":"Thread","kind":22,"detail":"struct Thread","insertText":"Thread{id:$1, process_owner_id:$2, priority:$3}","insertTextFormat":2},{"label":"Process","kind":22,"detail":"struct Process","insertText":"Process{name:$1, id:$2}","insertTextFormat":2},{"label":"get_process","kind":3,"detail":"fn get_process(with_process_name string) ?Process","insertText":"get_process($0)","insertTextFormat":2},{"label":"get_thread","kind":3,"detail":"fn get_thread(with_process_id u32) ?Thread","insertText":"get_thread($0)","insertTextFormat":2},{"label":"kill_process","kind":3,"detail":"fn kill_process(with_name string) ?","insertText":"kill_process($0)","insertTextFormat":2},{"label":"ProcessInformation","kind":22,"detail":"struct ProcessInformation","insertText":"ProcessInformation{h_process:$1, h_thread:$2, process_id:$3, thread_id:$4}","insertTextFormat":2},{"label":"StartupInfoA","kind":22,"detail":"struct StartupInfoA","insertText":"StartupInfoA{cb:$1, reserved:$2, desktop:$3, title:$4, x:$5, y:$6, x_size:$7, y_size:$8, x_count_chars:$9, y_count_chars:$10, fill_attribute:$11, flags:$12, show_window:$13, reserved_2:$14, reserved_3:$15, std_input:$16, std_output:$17, std_error:$18}","insertTextFormat":2},{"label":"create_process","kind":3,"detail":"fn create_process(with_path string, with_args []string) ?ProcessInformation","insertText":"create_process($0, $1)","insertTextFormat":2},{"label":"is_procss_open","kind":3,"detail":"fn is_procss_open(with_name string) bool","insertText":"is_procss_open($0)","insertTextFormat":2},{"label":"C.PROCESSENTRY32W","kind":22,"detail":"struct C.PROCESSENTRY32W","insertText":"C.PROCESSENTRY32W{dwSize:$1, cntUsage:$2, th32ProcessID:$3, th32DefaultHeapID:$4, th32ModuleID:$5, cntThreads:$6, th32ParentProcessID:$7, pcPriClassBase:$8, dwFlags:$9, szExeFile:$10}","insertTextFormat":2},{"label":"C.THREADENTRY32","kind":22,"detail":"struct C.THREADENTRY32","insertText":"C.THREADENTRY32{dwSize:$1, cntUsage:$2, th32ThreadID:$3, th32OwnerProcessID:$4, tpBasePri:$5, tpDeltaPri:$6, dwFlags:$7}","insertTextFormat":2},{"label":"FloatingSaveArea","kind":22,"detail":"struct FloatingSaveArea","insertText":"FloatingSaveArea{control_word:$1, status_word:$2, tag_word:$3, error_offset:$4, error_selector:$5, data_offset:$6, data_selector:$7, register_area:$8, spare0:$9}","insertTextFormat":2},{"label":"ImageDosHeader","kind":22,"detail":"struct ImageDosHeader","insertText":"ImageDosHeader{e_magic:$1, e_cblp:$2, e_cp:$3, e_crlc:$4, e_cparhdr:$5, e_minalloc:$6, e_maxalloc:$7, e_ss:$8, e_sp:$9, e_csum:$10, e_ip:$11, e_cs:$12, e_lfarlc:$13, e_ovno:$14, e_res:$15, e_oemid:$16, e_oeminfo:$17, e_res2:$18, e_lfanew:$19}","insertTextFormat":2},{"label":"ImageDataDirectory","kind":22,"detail":"struct ImageDataDirectory","insertText":"ImageDataDirectory{virtual_address:$1, size:$2}","insertTextFormat":2},{"label":"ImageOptionalHeader","kind":22,"detail":"struct ImageOptionalHeader","insertText":"ImageOptionalHeader{magic:$1, major_linker_version:$2, minor_linker_version:$3, size_of_code:$4, size_of_initialized_data:$5, size_of_uninitialized_data:$6, address_of_entry_point:$7, base_of_code:$8, base_of_data:$9, image_base:$10, section_alignment:$11, file_alignment:$12, major_operating_system_version:$13, minor_operating_system_version:$14, major_image_version:$15, minor_image_version:$16, major_subsystem_version:$17, minor_subsystem_version:$18, win32_version_value:$19, size_of_image:$20, size_of_headers:$21, check_sum:$22, subsystem:$23, dll_characteristics:$24, size_of_stack_reserve:$25, size_of_stack_commit:$26, size_of_heap_reserve:$27, size_of_heap_commit:$28, loader_flags:$29, number_of_rva_and_sizes:$30, data_directory:$31}","insertTextFormat":2},{"label":"ImageFileHeader","kind":22,"detail":"struct ImageFileHeader","insertText":"ImageFileHeader{machine:$1, number_of_sections:$2, time_date_stamp:$3, pointer_to_symbol_table:$4, number_of_symbols:$5, size_of_optional_header:$6, characteristics:$7}","insertTextFormat":2},{"label":"ImageNtHeaders","kind":22,"detail":"struct ImageNtHeaders","insertText":"ImageNtHeaders{signature:$1, file_header:$2, optional_header:$3}","insertTextFormat":2},{"label":"ImageSectionHeader","kind":22,"detail":"struct ImageSectionHeader","insertText":"ImageSectionHeader{name:$1, physical_address:$2, virtual_size_or_address:$3, size_of_raw_data:$4, pointer_to_raw_data:$5, pointer_to_relocations:$6, pointer_to_linenumbers:$7, number_of_relocations:$8, number_of_linenumbers:$9, characteristics:$10}","insertTextFormat":2},{"label":"ImageBaseRelocation","kind":22,"detail":"struct ImageBaseRelocation","insertText":"ImageBaseRelocation{virtual_address:$1, size_of_block:$2}","insertTextFormat":2},{"label":"ImageImportDescriptor","kind":22,"detail":"struct ImageImportDescriptor","insertText":"ImageImportDescriptor{characteristics_or_og_first_thunks:$1, time_date_stamp:$2, forwarder_chain:$3, name:$4, first_thunks:$5}","insertTextFormat":2},{"label":"ImportImageByName","kind":22,"detail":"struct ImportImageByName","insertText":"ImportImageByName{hint:$1, name:$2}","insertTextFormat":2},{"label":"ImageTlsDirectory","kind":22,"detail":"struct ImageTlsDirectory","insertText":"ImageTlsDirectory{start_address_of_raw_data:$1, end_address_of_raw_data:$2, address_of_index:$3, address_of_callback:$4, size_of_zero_fill:$5, characteristics:$6}","insertTextFormat":2},{"label":"InjectData","kind":22,"detail":"struct InjectData","insertText":"InjectData{load_lib_a:$1, get_proc_addr:$2, h_mod:$3}","insertTextFormat":2},{"label":"map_dll_release","kind":3,"detail":"fn map_dll_release(hnd C.HANDLE, image voidptr, shellcode voidptr)","insertText":"map_dll_release($0, $1, $2)","insertTextFormat":2},{"label":"get_steam_path","kind":3,"detail":"fn get_steam_path() ?string","insertText":"get_steam_path()","insertTextFormat":1},{"label":"load_vac_bypass","kind":3,"detail":"fn load_vac_bypass() ?","insertText":"load_vac_bypass()","insertTextFormat":1},{"label":"map_dll","kind":3,"detail":"fn map_dll(hnd C.HANDLE, and_name string) ?(voidptr, voidptr, voidptr, voidptr)","insertText":"map_dll($0, $1)","insertTextFormat":2},{"label":"clean","kind":3,"detail":"fn clean(hnd C.HANDLE, target_base voidptr, shellcode voidptr, base_file_addr voidptr) ?","insertText":"clean($0, $1, $2, $3)","insertTextFormat":2},{"label":"string","kind":22,"detail":"pub struct string","insertText":"string","insertTextFormat":1},{"label":"array","kind":22,"detail":"pub struct array","insertText":"array","insertTextFormat":1},{"label":"map","kind":22,"detail":"pub struct map","insertText":"map","insertTextFormat":1},{"label":"IError","kind":8,"detail":"IError","insertText":"IError","insertTextFormat":1},{"label":"gc_check_leaks","kind":3,"detail":"pub fn gc_check_leaks()","insertText":"gc_check_leaks","insertTextFormat":1},{"label":"Error","kind":22,"detail":"pub struct Error","insertText":"Error","insertTextFormat":1},{"label":"str","kind":3,"detail":"pub fn str() string","insertText":"str","insertTextFormat":1},{"label":"copy","kind":3,"detail":"pub fn copy(mut dst []u8, src []u8) int","insertText":"copy","insertTextFormat":1},{"label":"utf8_getchar","kind":3,"detail":"pub fn utf8_getchar() int","insertText":"utf8_getchar","insertTextFormat":1},{"label":"utf8_char_len","kind":3,"detail":"pub fn utf8_char_len(b u8) int","insertText":"utf8_char_len","insertTextFormat":1},{"label":"utf32_to_str","kind":3,"detail":"pub fn utf32_to_str(code u32) string","insertText":"utf32_to_str","insertTextFormat":1},{"label":"utf8_str_visible_length","kind":3,"detail":"pub fn utf8_str_visible_length(s string) int","insertText":"utf8_str_visible_length","insertTextFormat":1},{"label":"SortedMap","kind":22,"detail":"pub struct SortedMap","insertText":"SortedMap","insertTextFormat":1},{"label":"compare_strings","kind":3,"detail":"pub fn compare_strings(a &string, b &string) int","insertText":"compare_strings","insertTextFormat":1},{"label":"c_error_number_str","kind":3,"detail":"pub fn c_error_number_str(errnum int) string","insertText":"c_error_number_str","insertTextFormat":1},{"label":"eprintln","kind":3,"detail":"pub fn eprintln(s string)","insertText":"eprintln","insertTextFormat":1},{"label":"eprint","kind":3,"detail":"pub fn eprint(s string)","insertText":"eprint","insertTextFormat":1},{"label":"flush_stdout","kind":3,"detail":"pub fn flush_stdout()","insertText":"flush_stdout","insertTextFormat":1},{"label":"flush_stderr","kind":3,"detail":"pub fn flush_stderr()","insertText":"flush_stderr","insertTextFormat":1},{"label":"vcalloc","kind":3,"detail":"pub fn vcalloc(n isize) &u8","insertText":"vcalloc","insertTextFormat":1},{"label":"vcalloc_noscan","kind":3,"detail":"pub fn vcalloc_noscan(n isize) &u8","insertText":"vcalloc_noscan","insertTextFormat":1},{"label":"print_backtrace","kind":3,"detail":"pub fn print_backtrace()","insertText":"print_backtrace","insertTextFormat":1},{"label":"StrIntpMem","kind":22,"detail":"pub struct StrIntpMem","insertText":"StrIntpMem","insertTextFormat":1},{"label":"get_str_intp_u64_format","kind":3,"detail":"pub fn get_str_intp_u64_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u64","insertText":"get_str_intp_u64_format","insertTextFormat":1},{"label":"get_str_intp_u32_format","kind":3,"detail":"pub fn get_str_intp_u32_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u32","insertText":"get_str_intp_u32_format","insertTextFormat":1},{"label":"StrIntpData","kind":22,"detail":"pub struct StrIntpData","insertText":"StrIntpData","insertTextFormat":1},{"label":"StrIntpCgenData","kind":22,"detail":"pub struct StrIntpCgenData","insertText":"StrIntpCgenData","insertTextFormat":1},{"label":"si_s_code","kind":6,"detail":"pub const si_s_code string","insertText":"si_s_code","insertTextFormat":1},{"label":"si_g32_code","kind":6,"detail":"pub const si_g32_code string","insertText":"si_g32_code","insertTextFormat":1},{"label":"si_g64_code","kind":6,"detail":"pub const si_g64_code string","insertText":"si_g64_code","insertTextFormat":1},{"label":"VAssertMetaInfo","kind":22,"detail":"pub struct VAssertMetaInfo","insertText":"VAssertMetaInfo","insertTextFormat":1},{"label":"MethodArgs","kind":22,"detail":"pub struct MethodArgs","insertText":"MethodArgs","insertTextFormat":1},{"label":"FunctionData","kind":22,"detail":"pub struct FunctionData","insertText":"FunctionData","insertTextFormat":1},{"label":"FieldData","kind":22,"detail":"pub struct FieldData","insertText":"FieldData","insertTextFormat":1},{"label":"StructAttribute","kind":22,"detail":"pub struct StructAttribute","insertText":"StructAttribute","insertTextFormat":1},{"label":"ptr_str","kind":3,"detail":"pub fn ptr_str(ptr voidptr) string","insertText":"ptr_str","insertTextFormat":1}]},"timestamp":1664350523}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350523}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350523}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350524}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350525}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350526}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350526}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350526}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350529}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350529}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350530}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350530}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350530}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350531}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350531}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350531}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":9,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":29,"line":22},"context":{"triggerKind":1}}},"timestamp":1664350532}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":9,"result":[{"label":"rand","kind":9,"detail":"","insertText":"rand","insertTextFormat":1},{"label":"embed_file","kind":9,"detail":"","insertText":"embed_file","insertTextFormat":1},{"label":"C","kind":9,"detail":"C symbol definitions","insertText":"C.","insertTextFormat":1},{"label":"hnd","kind":6,"detail":"hnd C.HANDLE","insertText":"hnd","insertTextFormat":1},{"label":"image","kind":6,"detail":"image voidptr","insertText":"image","insertTextFormat":1},{"label":"shellcode","kind":6,"detail":"shellcode voidptr","insertText":"shellcode","insertTextFormat":1},{"label":"thread_hijacking_release","kind":3,"detail":"fn thread_hijacking_release(hnd_t C.HANDLE, hnd C.HANDLE, code_cave_addr voidptr, resume bool)","insertText":"thread_hijacking_release($0, $1, $2, $3)","insertTextFormat":2},{"label":"call_dll_main_via_thread_hijacking","kind":3,"detail":"fn call_dll_main_via_thread_hijacking(hnd C.HANDLE, proc_id u32, routine voidptr, args voidptr) ?","insertText":"call_dll_main_via_thread_hijacking($0, $1, $2, $3)","insertTextFormat":2},{"label":"ThreadContext","kind":22,"detail":"struct ThreadContext","insertText":"ThreadContext{context_flags:$1, dr0:$2, dr1:$3, dr2:$4, dr3:$5, dr6:$6, dr7:$7, float_save:$8, seg_gs:$9, seg_fs:$10, seg_es:$11, seg_ds:$12, edi:$13, esi:$14, ebx:$15, edx:$16, ecx:$17, eax:$18, ebp:$19, eip:$20, seg_cs:$21, e_flags:$22, esp:$23, seg_ss:$24, extended_registers:$25}","insertTextFormat":2},{"label":"old_thread_context","kind":6,"detail":"mut old_thread_context ThreadContext","insertText":"old_thread_context","insertTextFormat":1},{"label":"code_cave","kind":6,"detail":"code_cave","insertText":"code_cave","insertTextFormat":1},{"label":"shellcode_t","kind":6,"detail":"mut shellcode_t","insertText":"shellcode_t","insertTextFormat":1},{"label":"fn_offset","kind":6,"detail":"fn_offset","insertText":"fn_offset","insertTextFormat":1},{"label":"check_byte_offset","kind":6,"detail":"check_byte_offset int","insertText":"check_byte_offset","insertTextFormat":1},{"label":"shellcode_data","kind":6,"detail":"shellcode_data","insertText":"shellcode_data","insertTextFormat":1},{"label":"a","kind":6,"detail":"mut a","insertText":"a","insertTextFormat":1},{"label":"b","kind":6,"detail":"mut b","insertText":"b","insertTextFormat":1},{"label":"c","kind":6,"detail":"mut c","insertText":"c","insertTextFormat":1},{"label":"d","kind":6,"detail":"mut d","insertText":"d","insertTextFormat":1},{"label":"e","kind":6,"detail":"mut e","insertText":"e","insertTextFormat":1},{"label":"r","kind":3,"detail":"pub fn r(fromProc C.HANDLE, atAddr voidptr) ?T","insertText":"r($0, $1)","insertTextFormat":2},{"label":"w","kind":3,"detail":"pub fn w(fromProc C.HANDLE, atAddr voidptr, withData &T) ?","insertText":"w($0, $1, $2)","insertTextFormat":2},{"label":"wr","kind":3,"detail":"pub fn wr(fromProc C.HANDLE, atAddr voidptr, withData voidptr, andSize u32) ?","insertText":"wr($0, $1, $2, $3)","insertTextFormat":2},{"label":"rar","kind":3,"detail":"pub fn rar(fromProc C.HANDLE, atAddr voidptr, andSize u32, output []T) ?","insertText":"rar($0, $1, $2, $3)","insertTextFormat":2},{"label":"wa","kind":3,"detail":"pub fn wa(fromProc C.HANDLE, atAddr voidptr, withData []T) ?","insertText":"wa($0, $1, $2)","insertTextFormat":2},{"label":"target_name","kind":6,"detail":"const target_name string","insertText":"target_name","insertTextFormat":1},{"label":"to_clear","kind":6,"detail":"const to_clear []string","insertText":"to_clear","insertTextFormat":1},{"label":"Thread","kind":22,"detail":"struct Thread","insertText":"Thread{id:$1, process_owner_id:$2, priority:$3}","insertTextFormat":2},{"label":"Process","kind":22,"detail":"struct Process","insertText":"Process{name:$1, id:$2}","insertTextFormat":2},{"label":"get_process","kind":3,"detail":"fn get_process(with_process_name string) ?Process","insertText":"get_process($0)","insertTextFormat":2},{"label":"get_thread","kind":3,"detail":"fn get_thread(with_process_id u32) ?Thread","insertText":"get_thread($0)","insertTextFormat":2},{"label":"kill_process","kind":3,"detail":"fn kill_process(with_name string) ?","insertText":"kill_process($0)","insertTextFormat":2},{"label":"ProcessInformation","kind":22,"detail":"struct ProcessInformation","insertText":"ProcessInformation{h_process:$1, h_thread:$2, process_id:$3, thread_id:$4}","insertTextFormat":2},{"label":"StartupInfoA","kind":22,"detail":"struct StartupInfoA","insertText":"StartupInfoA{cb:$1, reserved:$2, desktop:$3, title:$4, x:$5, y:$6, x_size:$7, y_size:$8, x_count_chars:$9, y_count_chars:$10, fill_attribute:$11, flags:$12, show_window:$13, reserved_2:$14, reserved_3:$15, std_input:$16, std_output:$17, std_error:$18}","insertTextFormat":2},{"label":"create_process","kind":3,"detail":"fn create_process(with_path string, with_args []string) ?ProcessInformation","insertText":"create_process($0, $1)","insertTextFormat":2},{"label":"is_procss_open","kind":3,"detail":"fn is_procss_open(with_name string) bool","insertText":"is_procss_open($0)","insertTextFormat":2},{"label":"C.PROCESSENTRY32W","kind":22,"detail":"struct C.PROCESSENTRY32W","insertText":"C.PROCESSENTRY32W{dwSize:$1, cntUsage:$2, th32ProcessID:$3, th32DefaultHeapID:$4, th32ModuleID:$5, cntThreads:$6, th32ParentProcessID:$7, pcPriClassBase:$8, dwFlags:$9, szExeFile:$10}","insertTextFormat":2},{"label":"C.THREADENTRY32","kind":22,"detail":"struct C.THREADENTRY32","insertText":"C.THREADENTRY32{dwSize:$1, cntUsage:$2, th32ThreadID:$3, th32OwnerProcessID:$4, tpBasePri:$5, tpDeltaPri:$6, dwFlags:$7}","insertTextFormat":2},{"label":"FloatingSaveArea","kind":22,"detail":"struct FloatingSaveArea","insertText":"FloatingSaveArea{control_word:$1, status_word:$2, tag_word:$3, error_offset:$4, error_selector:$5, data_offset:$6, data_selector:$7, register_area:$8, spare0:$9}","insertTextFormat":2},{"label":"ImageDosHeader","kind":22,"detail":"struct ImageDosHeader","insertText":"ImageDosHeader{e_magic:$1, e_cblp:$2, e_cp:$3, e_crlc:$4, e_cparhdr:$5, e_minalloc:$6, e_maxalloc:$7, e_ss:$8, e_sp:$9, e_csum:$10, e_ip:$11, e_cs:$12, e_lfarlc:$13, e_ovno:$14, e_res:$15, e_oemid:$16, e_oeminfo:$17, e_res2:$18, e_lfanew:$19}","insertTextFormat":2},{"label":"ImageDataDirectory","kind":22,"detail":"struct ImageDataDirectory","insertText":"ImageDataDirectory{virtual_address:$1, size:$2}","insertTextFormat":2},{"label":"ImageOptionalHeader","kind":22,"detail":"struct ImageOptionalHeader","insertText":"ImageOptionalHeader{magic:$1, major_linker_version:$2, minor_linker_version:$3, size_of_code:$4, size_of_initialized_data:$5, size_of_uninitialized_data:$6, address_of_entry_point:$7, base_of_code:$8, base_of_data:$9, image_base:$10, section_alignment:$11, file_alignment:$12, major_operating_system_version:$13, minor_operating_system_version:$14, major_image_version:$15, minor_image_version:$16, major_subsystem_version:$17, minor_subsystem_version:$18, win32_version_value:$19, size_of_image:$20, size_of_headers:$21, check_sum:$22, subsystem:$23, dll_characteristics:$24, size_of_stack_reserve:$25, size_of_stack_commit:$26, size_of_heap_reserve:$27, size_of_heap_commit:$28, loader_flags:$29, number_of_rva_and_sizes:$30, data_directory:$31}","insertTextFormat":2},{"label":"ImageFileHeader","kind":22,"detail":"struct ImageFileHeader","insertText":"ImageFileHeader{machine:$1, number_of_sections:$2, time_date_stamp:$3, pointer_to_symbol_table:$4, number_of_symbols:$5, size_of_optional_header:$6, characteristics:$7}","insertTextFormat":2},{"label":"ImageNtHeaders","kind":22,"detail":"struct ImageNtHeaders","insertText":"ImageNtHeaders{signature:$1, file_header:$2, optional_header:$3}","insertTextFormat":2},{"label":"ImageSectionHeader","kind":22,"detail":"struct ImageSectionHeader","insertText":"ImageSectionHeader{name:$1, physical_address:$2, virtual_size_or_address:$3, size_of_raw_data:$4, pointer_to_raw_data:$5, pointer_to_relocations:$6, pointer_to_linenumbers:$7, number_of_relocations:$8, number_of_linenumbers:$9, characteristics:$10}","insertTextFormat":2},{"label":"ImageBaseRelocation","kind":22,"detail":"struct ImageBaseRelocation","insertText":"ImageBaseRelocation{virtual_address:$1, size_of_block:$2}","insertTextFormat":2},{"label":"ImageImportDescriptor","kind":22,"detail":"struct ImageImportDescriptor","insertText":"ImageImportDescriptor{characteristics_or_og_first_thunks:$1, time_date_stamp:$2, forwarder_chain:$3, name:$4, first_thunks:$5}","insertTextFormat":2},{"label":"ImportImageByName","kind":22,"detail":"struct ImportImageByName","insertText":"ImportImageByName{hint:$1, name:$2}","insertTextFormat":2},{"label":"ImageTlsDirectory","kind":22,"detail":"struct ImageTlsDirectory","insertText":"ImageTlsDirectory{start_address_of_raw_data:$1, end_address_of_raw_data:$2, address_of_index:$3, address_of_callback:$4, size_of_zero_fill:$5, characteristics:$6}","insertTextFormat":2},{"label":"InjectData","kind":22,"detail":"struct InjectData","insertText":"InjectData{load_lib_a:$1, get_proc_addr:$2, h_mod:$3}","insertTextFormat":2},{"label":"map_dll_release","kind":3,"detail":"fn map_dll_release(hnd C.HANDLE, image voidptr, shellcode voidptr)","insertText":"map_dll_release($0, $1, $2)","insertTextFormat":2},{"label":"get_steam_path","kind":3,"detail":"fn get_steam_path() ?string","insertText":"get_steam_path()","insertTextFormat":1},{"label":"load_vac_bypass","kind":3,"detail":"fn load_vac_bypass() ?","insertText":"load_vac_bypass()","insertTextFormat":1},{"label":"map_dll","kind":3,"detail":"fn map_dll(hnd C.HANDLE, and_name string) ?(voidptr, voidptr, voidptr, voidptr)","insertText":"map_dll($0, $1)","insertTextFormat":2},{"label":"clean","kind":3,"detail":"fn clean(hnd C.HANDLE, target_base voidptr, shellcode voidptr, base_file_addr voidptr) ?","insertText":"clean($0, $1, $2, $3)","insertTextFormat":2},{"label":"string","kind":22,"detail":"pub struct string","insertText":"string","insertTextFormat":1},{"label":"array","kind":22,"detail":"pub struct array","insertText":"array","insertTextFormat":1},{"label":"map","kind":22,"detail":"pub struct map","insertText":"map","insertTextFormat":1},{"label":"IError","kind":8,"detail":"IError","insertText":"IError","insertTextFormat":1},{"label":"gc_check_leaks","kind":3,"detail":"pub fn gc_check_leaks()","insertText":"gc_check_leaks","insertTextFormat":1},{"label":"Error","kind":22,"detail":"pub struct Error","insertText":"Error","insertTextFormat":1},{"label":"str","kind":3,"detail":"pub fn str() string","insertText":"str","insertTextFormat":1},{"label":"copy","kind":3,"detail":"pub fn copy(mut dst []u8, src []u8) int","insertText":"copy","insertTextFormat":1},{"label":"utf8_getchar","kind":3,"detail":"pub fn utf8_getchar() int","insertText":"utf8_getchar","insertTextFormat":1},{"label":"utf8_char_len","kind":3,"detail":"pub fn utf8_char_len(b u8) int","insertText":"utf8_char_len","insertTextFormat":1},{"label":"utf32_to_str","kind":3,"detail":"pub fn utf32_to_str(code u32) string","insertText":"utf32_to_str","insertTextFormat":1},{"label":"utf8_str_visible_length","kind":3,"detail":"pub fn utf8_str_visible_length(s string) int","insertText":"utf8_str_visible_length","insertTextFormat":1},{"label":"SortedMap","kind":22,"detail":"pub struct SortedMap","insertText":"SortedMap","insertTextFormat":1},{"label":"compare_strings","kind":3,"detail":"pub fn compare_strings(a &string, b &string) int","insertText":"compare_strings","insertTextFormat":1},{"label":"c_error_number_str","kind":3,"detail":"pub fn c_error_number_str(errnum int) string","insertText":"c_error_number_str","insertTextFormat":1},{"label":"eprintln","kind":3,"detail":"pub fn eprintln(s string)","insertText":"eprintln","insertTextFormat":1},{"label":"eprint","kind":3,"detail":"pub fn eprint(s string)","insertText":"eprint","insertTextFormat":1},{"label":"flush_stdout","kind":3,"detail":"pub fn flush_stdout()","insertText":"flush_stdout","insertTextFormat":1},{"label":"flush_stderr","kind":3,"detail":"pub fn flush_stderr()","insertText":"flush_stderr","insertTextFormat":1},{"label":"vcalloc","kind":3,"detail":"pub fn vcalloc(n isize) &u8","insertText":"vcalloc","insertTextFormat":1},{"label":"vcalloc_noscan","kind":3,"detail":"pub fn vcalloc_noscan(n isize) &u8","insertText":"vcalloc_noscan","insertTextFormat":1},{"label":"print_backtrace","kind":3,"detail":"pub fn print_backtrace()","insertText":"print_backtrace","insertTextFormat":1},{"label":"StrIntpMem","kind":22,"detail":"pub struct StrIntpMem","insertText":"StrIntpMem","insertTextFormat":1},{"label":"get_str_intp_u64_format","kind":3,"detail":"pub fn get_str_intp_u64_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u64","insertText":"get_str_intp_u64_format","insertTextFormat":1},{"label":"get_str_intp_u32_format","kind":3,"detail":"pub fn get_str_intp_u32_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u32","insertText":"get_str_intp_u32_format","insertTextFormat":1},{"label":"StrIntpData","kind":22,"detail":"pub struct StrIntpData","insertText":"StrIntpData","insertTextFormat":1},{"label":"StrIntpCgenData","kind":22,"detail":"pub struct StrIntpCgenData","insertText":"StrIntpCgenData","insertTextFormat":1},{"label":"si_s_code","kind":6,"detail":"pub const si_s_code string","insertText":"si_s_code","insertTextFormat":1},{"label":"si_g32_code","kind":6,"detail":"pub const si_g32_code string","insertText":"si_g32_code","insertTextFormat":1},{"label":"si_g64_code","kind":6,"detail":"pub const si_g64_code string","insertText":"si_g64_code","insertTextFormat":1},{"label":"VAssertMetaInfo","kind":22,"detail":"pub struct VAssertMetaInfo","insertText":"VAssertMetaInfo","insertTextFormat":1},{"label":"MethodArgs","kind":22,"detail":"pub struct MethodArgs","insertText":"MethodArgs","insertTextFormat":1},{"label":"FunctionData","kind":22,"detail":"pub struct FunctionData","insertText":"FunctionData","insertTextFormat":1},{"label":"FieldData","kind":22,"detail":"pub struct FieldData","insertText":"FieldData","insertTextFormat":1},{"label":"StructAttribute","kind":22,"detail":"pub struct StructAttribute","insertText":"StructAttribute","insertTextFormat":1},{"label":"ptr_str","kind":3,"detail":"pub fn ptr_str(ptr voidptr) string","insertText":"ptr_str","insertTextFormat":1}]},"timestamp":1664350532}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350532}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350532}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350533}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":10,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":32,"line":22},"context":{"triggerCharacter":".","triggerKind":2}}},"timestamp":1664350533}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":10,"result":[]},"timestamp":1664350533}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350533}
{"kind":"recv-request","message":{"jsonrpc":"2.0","id":11,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v"},"position":{"character":33,"line":22},"context":{"triggerKind":1}}},"timestamp":1664350536}
{"kind":"send-response","message":{"jsonrpc":"2.0","id":11,"result":[{"label":"rand","kind":9,"detail":"","insertText":"rand","insertTextFormat":1},{"label":"embed_file","kind":9,"detail":"","insertText":"embed_file","insertTextFormat":1},{"label":"C","kind":9,"detail":"C symbol definitions","insertText":"C.","insertTextFormat":1},{"label":"hnd","kind":6,"detail":"hnd C.HANDLE","insertText":"hnd","insertTextFormat":1},{"label":"image","kind":6,"detail":"image voidptr","insertText":"image","insertTextFormat":1},{"label":"shellcode","kind":6,"detail":"shellcode voidptr","insertText":"shellcode","insertTextFormat":1},{"label":"thread_hijacking_release","kind":3,"detail":"fn thread_hijacking_release(hnd_t C.HANDLE, hnd C.HANDLE, code_cave_addr voidptr, resume bool)","insertText":"thread_hijacking_release($0, $1, $2, $3)","insertTextFormat":2},{"label":"call_dll_main_via_thread_hijacking","kind":3,"detail":"fn call_dll_main_via_thread_hijacking(hnd C.HANDLE, proc_id u32, routine voidptr, args voidptr) ?","insertText":"call_dll_main_via_thread_hijacking($0, $1, $2, $3)","insertTextFormat":2},{"label":"ThreadContext","kind":22,"detail":"struct ThreadContext","insertText":"ThreadContext{context_flags:$1, dr0:$2, dr1:$3, dr2:$4, dr3:$5, dr6:$6, dr7:$7, float_save:$8, seg_gs:$9, seg_fs:$10, seg_es:$11, seg_ds:$12, edi:$13, esi:$14, ebx:$15, edx:$16, ecx:$17, eax:$18, ebp:$19, eip:$20, seg_cs:$21, e_flags:$22, esp:$23, seg_ss:$24, extended_registers:$25}","insertTextFormat":2},{"label":"old_thread_context","kind":6,"detail":"mut old_thread_context ThreadContext","insertText":"old_thread_context","insertTextFormat":1},{"label":"code_cave","kind":6,"detail":"code_cave","insertText":"code_cave","insertTextFormat":1},{"label":"shellcode_t","kind":6,"detail":"mut shellcode_t","insertText":"shellcode_t","insertTextFormat":1},{"label":"fn_offset","kind":6,"detail":"fn_offset","insertText":"fn_offset","insertTextFormat":1},{"label":"check_byte_offset","kind":6,"detail":"check_byte_offset int","insertText":"check_byte_offset","insertTextFormat":1},{"label":"shellcode_data","kind":6,"detail":"shellcode_data","insertText":"shellcode_data","insertTextFormat":1},{"label":"a","kind":6,"detail":"mut a","insertText":"a","insertTextFormat":1},{"label":"b","kind":6,"detail":"mut b","insertText":"b","insertTextFormat":1},{"label":"c","kind":6,"detail":"mut c","insertText":"c","insertTextFormat":1},{"label":"d","kind":6,"detail":"mut d","insertText":"d","insertTextFormat":1},{"label":"e","kind":6,"detail":"mut e","insertText":"e","insertTextFormat":1},{"label":"r","kind":3,"detail":"pub fn r(fromProc C.HANDLE, atAddr voidptr) ?T","insertText":"r($0, $1)","insertTextFormat":2},{"label":"w","kind":3,"detail":"pub fn w(fromProc C.HANDLE, atAddr voidptr, withData &T) ?","insertText":"w($0, $1, $2)","insertTextFormat":2},{"label":"wr","kind":3,"detail":"pub fn wr(fromProc C.HANDLE, atAddr voidptr, withData voidptr, andSize u32) ?","insertText":"wr($0, $1, $2, $3)","insertTextFormat":2},{"label":"rar","kind":3,"detail":"pub fn rar(fromProc C.HANDLE, atAddr voidptr, andSize u32, output []T) ?","insertText":"rar($0, $1, $2, $3)","insertTextFormat":2},{"label":"wa","kind":3,"detail":"pub fn wa(fromProc C.HANDLE, atAddr voidptr, withData []T) ?","insertText":"wa($0, $1, $2)","insertTextFormat":2},{"label":"target_name","kind":6,"detail":"const target_name string","insertText":"target_name","insertTextFormat":1},{"label":"to_clear","kind":6,"detail":"const to_clear []string","insertText":"to_clear","insertTextFormat":1},{"label":"Thread","kind":22,"detail":"struct Thread","insertText":"Thread{id:$1, process_owner_id:$2, priority:$3}","insertTextFormat":2},{"label":"Process","kind":22,"detail":"struct Process","insertText":"Process{name:$1, id:$2}","insertTextFormat":2},{"label":"get_process","kind":3,"detail":"fn get_process(with_process_name string) ?Process","insertText":"get_process($0)","insertTextFormat":2},{"label":"get_thread","kind":3,"detail":"fn get_thread(with_process_id u32) ?Thread","insertText":"get_thread($0)","insertTextFormat":2},{"label":"kill_process","kind":3,"detail":"fn kill_process(with_name string) ?","insertText":"kill_process($0)","insertTextFormat":2},{"label":"ProcessInformation","kind":22,"detail":"struct ProcessInformation","insertText":"ProcessInformation{h_process:$1, h_thread:$2, process_id:$3, thread_id:$4}","insertTextFormat":2},{"label":"StartupInfoA","kind":22,"detail":"struct StartupInfoA","insertText":"StartupInfoA{cb:$1, reserved:$2, desktop:$3, title:$4, x:$5, y:$6, x_size:$7, y_size:$8, x_count_chars:$9, y_count_chars:$10, fill_attribute:$11, flags:$12, show_window:$13, reserved_2:$14, reserved_3:$15, std_input:$16, std_output:$17, std_error:$18}","insertTextFormat":2},{"label":"create_process","kind":3,"detail":"fn create_process(with_path string, with_args []string) ?ProcessInformation","insertText":"create_process($0, $1)","insertTextFormat":2},{"label":"is_procss_open","kind":3,"detail":"fn is_procss_open(with_name string) bool","insertText":"is_procss_open($0)","insertTextFormat":2},{"label":"C.PROCESSENTRY32W","kind":22,"detail":"struct C.PROCESSENTRY32W","insertText":"C.PROCESSENTRY32W{dwSize:$1, cntUsage:$2, th32ProcessID:$3, th32DefaultHeapID:$4, th32ModuleID:$5, cntThreads:$6, th32ParentProcessID:$7, pcPriClassBase:$8, dwFlags:$9, szExeFile:$10}","insertTextFormat":2},{"label":"C.THREADENTRY32","kind":22,"detail":"struct C.THREADENTRY32","insertText":"C.THREADENTRY32{dwSize:$1, cntUsage:$2, th32ThreadID:$3, th32OwnerProcessID:$4, tpBasePri:$5, tpDeltaPri:$6, dwFlags:$7}","insertTextFormat":2},{"label":"FloatingSaveArea","kind":22,"detail":"struct FloatingSaveArea","insertText":"FloatingSaveArea{control_word:$1, status_word:$2, tag_word:$3, error_offset:$4, error_selector:$5, data_offset:$6, data_selector:$7, register_area:$8, spare0:$9}","insertTextFormat":2},{"label":"ImageDosHeader","kind":22,"detail":"struct ImageDosHeader","insertText":"ImageDosHeader{e_magic:$1, e_cblp:$2, e_cp:$3, e_crlc:$4, e_cparhdr:$5, e_minalloc:$6, e_maxalloc:$7, e_ss:$8, e_sp:$9, e_csum:$10, e_ip:$11, e_cs:$12, e_lfarlc:$13, e_ovno:$14, e_res:$15, e_oemid:$16, e_oeminfo:$17, e_res2:$18, e_lfanew:$19}","insertTextFormat":2},{"label":"ImageDataDirectory","kind":22,"detail":"struct ImageDataDirectory","insertText":"ImageDataDirectory{virtual_address:$1, size:$2}","insertTextFormat":2},{"label":"ImageOptionalHeader","kind":22,"detail":"struct ImageOptionalHeader","insertText":"ImageOptionalHeader{magic:$1, major_linker_version:$2, minor_linker_version:$3, size_of_code:$4, size_of_initialized_data:$5, size_of_uninitialized_data:$6, address_of_entry_point:$7, base_of_code:$8, base_of_data:$9, image_base:$10, section_alignment:$11, file_alignment:$12, major_operating_system_version:$13, minor_operating_system_version:$14, major_image_version:$15, minor_image_version:$16, major_subsystem_version:$17, minor_subsystem_version:$18, win32_version_value:$19, size_of_image:$20, size_of_headers:$21, check_sum:$22, subsystem:$23, dll_characteristics:$24, size_of_stack_reserve:$25, size_of_stack_commit:$26, size_of_heap_reserve:$27, size_of_heap_commit:$28, loader_flags:$29, number_of_rva_and_sizes:$30, data_directory:$31}","insertTextFormat":2},{"label":"ImageFileHeader","kind":22,"detail":"struct ImageFileHeader","insertText":"ImageFileHeader{machine:$1, number_of_sections:$2, time_date_stamp:$3, pointer_to_symbol_table:$4, number_of_symbols:$5, size_of_optional_header:$6, characteristics:$7}","insertTextFormat":2},{"label":"ImageNtHeaders","kind":22,"detail":"struct ImageNtHeaders","insertText":"ImageNtHeaders{signature:$1, file_header:$2, optional_header:$3}","insertTextFormat":2},{"label":"ImageSectionHeader","kind":22,"detail":"struct ImageSectionHeader","insertText":"ImageSectionHeader{name:$1, physical_address:$2, virtual_size_or_address:$3, size_of_raw_data:$4, pointer_to_raw_data:$5, pointer_to_relocations:$6, pointer_to_linenumbers:$7, number_of_relocations:$8, number_of_linenumbers:$9, characteristics:$10}","insertTextFormat":2},{"label":"ImageBaseRelocation","kind":22,"detail":"struct ImageBaseRelocation","insertText":"ImageBaseRelocation{virtual_address:$1, size_of_block:$2}","insertTextFormat":2},{"label":"ImageImportDescriptor","kind":22,"detail":"struct ImageImportDescriptor","insertText":"ImageImportDescriptor{characteristics_or_og_first_thunks:$1, time_date_stamp:$2, forwarder_chain:$3, name:$4, first_thunks:$5}","insertTextFormat":2},{"label":"ImportImageByName","kind":22,"detail":"struct ImportImageByName","insertText":"ImportImageByName{hint:$1, name:$2}","insertTextFormat":2},{"label":"ImageTlsDirectory","kind":22,"detail":"struct ImageTlsDirectory","insertText":"ImageTlsDirectory{start_address_of_raw_data:$1, end_address_of_raw_data:$2, address_of_index:$3, address_of_callback:$4, size_of_zero_fill:$5, characteristics:$6}","insertTextFormat":2},{"label":"InjectData","kind":22,"detail":"struct InjectData","insertText":"InjectData{load_lib_a:$1, get_proc_addr:$2, h_mod:$3}","insertTextFormat":2},{"label":"map_dll_release","kind":3,"detail":"fn map_dll_release(hnd C.HANDLE, image voidptr, shellcode voidptr)","insertText":"map_dll_release($0, $1, $2)","insertTextFormat":2},{"label":"get_steam_path","kind":3,"detail":"fn get_steam_path() ?string","insertText":"get_steam_path()","insertTextFormat":1},{"label":"load_vac_bypass","kind":3,"detail":"fn load_vac_bypass() ?","insertText":"load_vac_bypass()","insertTextFormat":1},{"label":"map_dll","kind":3,"detail":"fn map_dll(hnd C.HANDLE, and_name string) ?(voidptr, voidptr, voidptr, voidptr)","insertText":"map_dll($0, $1)","insertTextFormat":2},{"label":"clean","kind":3,"detail":"fn clean(hnd C.HANDLE, target_base voidptr, shellcode voidptr, base_file_addr voidptr) ?","insertText":"clean($0, $1, $2, $3)","insertTextFormat":2},{"label":"string","kind":22,"detail":"pub struct string","insertText":"string","insertTextFormat":1},{"label":"array","kind":22,"detail":"pub struct array","insertText":"array","insertTextFormat":1},{"label":"map","kind":22,"detail":"pub struct map","insertText":"map","insertTextFormat":1},{"label":"IError","kind":8,"detail":"IError","insertText":"IError","insertTextFormat":1},{"label":"gc_check_leaks","kind":3,"detail":"pub fn gc_check_leaks()","insertText":"gc_check_leaks","insertTextFormat":1},{"label":"Error","kind":22,"detail":"pub struct Error","insertText":"Error","insertTextFormat":1},{"label":"str","kind":3,"detail":"pub fn str() string","insertText":"str","insertTextFormat":1},{"label":"copy","kind":3,"detail":"pub fn copy(mut dst []u8, src []u8) int","insertText":"copy","insertTextFormat":1},{"label":"utf8_getchar","kind":3,"detail":"pub fn utf8_getchar() int","insertText":"utf8_getchar","insertTextFormat":1},{"label":"utf8_char_len","kind":3,"detail":"pub fn utf8_char_len(b u8) int","insertText":"utf8_char_len","insertTextFormat":1},{"label":"utf32_to_str","kind":3,"detail":"pub fn utf32_to_str(code u32) string","insertText":"utf32_to_str","insertTextFormat":1},{"label":"utf8_str_visible_length","kind":3,"detail":"pub fn utf8_str_visible_length(s string) int","insertText":"utf8_str_visible_length","insertTextFormat":1},{"label":"SortedMap","kind":22,"detail":"pub struct SortedMap","insertText":"SortedMap","insertTextFormat":1},{"label":"compare_strings","kind":3,"detail":"pub fn compare_strings(a &string, b &string) int","insertText":"compare_strings","insertTextFormat":1},{"label":"c_error_number_str","kind":3,"detail":"pub fn c_error_number_str(errnum int) string","insertText":"c_error_number_str","insertTextFormat":1},{"label":"eprintln","kind":3,"detail":"pub fn eprintln(s string)","insertText":"eprintln","insertTextFormat":1},{"label":"eprint","kind":3,"detail":"pub fn eprint(s string)","insertText":"eprint","insertTextFormat":1},{"label":"flush_stdout","kind":3,"detail":"pub fn flush_stdout()","insertText":"flush_stdout","insertTextFormat":1},{"label":"flush_stderr","kind":3,"detail":"pub fn flush_stderr()","insertText":"flush_stderr","insertTextFormat":1},{"label":"vcalloc","kind":3,"detail":"pub fn vcalloc(n isize) &u8","insertText":"vcalloc","insertTextFormat":1},{"label":"vcalloc_noscan","kind":3,"detail":"pub fn vcalloc_noscan(n isize) &u8","insertText":"vcalloc_noscan","insertTextFormat":1},{"label":"print_backtrace","kind":3,"detail":"pub fn print_backtrace()","insertText":"print_backtrace","insertTextFormat":1},{"label":"StrIntpMem","kind":22,"detail":"pub struct StrIntpMem","insertText":"StrIntpMem","insertTextFormat":1},{"label":"get_str_intp_u64_format","kind":3,"detail":"pub fn get_str_intp_u64_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u64","insertText":"get_str_intp_u64_format","insertTextFormat":1},{"label":"get_str_intp_u32_format","kind":3,"detail":"pub fn get_str_intp_u32_format(fmt_type StrIntpType, in_width int, in_precision int, in_tail_zeros bool, in_sign bool, in_pad_ch byte, in_base int, in_upper_case bool) u32","insertText":"get_str_intp_u32_format","insertTextFormat":1},{"label":"StrIntpData","kind":22,"detail":"pub struct StrIntpData","insertText":"StrIntpData","insertTextFormat":1},{"label":"StrIntpCgenData","kind":22,"detail":"pub struct StrIntpCgenData","insertText":"StrIntpCgenData","insertTextFormat":1},{"label":"si_s_code","kind":6,"detail":"pub const si_s_code string","insertText":"si_s_code","insertTextFormat":1},{"label":"si_g32_code","kind":6,"detail":"pub const si_g32_code string","insertText":"si_g32_code","insertTextFormat":1},{"label":"si_g64_code","kind":6,"detail":"pub const si_g64_code string","insertText":"si_g64_code","insertTextFormat":1},{"label":"VAssertMetaInfo","kind":22,"detail":"pub struct VAssertMetaInfo","insertText":"VAssertMetaInfo","insertTextFormat":1},{"label":"MethodArgs","kind":22,"detail":"pub struct MethodArgs","insertText":"MethodArgs","insertTextFormat":1},{"label":"FunctionData","kind":22,"detail":"pub struct FunctionData","insertText":"FunctionData","insertTextFormat":1},{"label":"FieldData","kind":22,"detail":"pub struct FieldData","insertText":"FieldData","insertTextFormat":1},{"label":"StructAttribute","kind":22,"detail":"pub struct StructAttribute","insertText":"StructAttribute","insertTextFormat":1},{"label":"ptr_str","kind":3,"detail":"pub fn ptr_str(ptr voidptr) string","insertText":"ptr_str","insertTextFormat":1}]},"timestamp":1664350536}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350536}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350536}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350537}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350537}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350537}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350538}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350538}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350538}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350539}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350540}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/consts.v","diagnostics":[]}},"timestamp":1664350547}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/consts.v","diagnostics":[]}},"timestamp":1664350547}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/hijack.v","diagnostics":[]}},"timestamp":1664350550}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/hijack.v","diagnostics":[]}},"timestamp":1664350550}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350557}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/injector.v","diagnostics":[]}},"timestamp":1664350563}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/injector.v","diagnostics":[]}},"timestamp":1664350563}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/memory.v","diagnostics":[]}},"timestamp":1664350582}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/memory.v","diagnostics":[]}},"timestamp":1664350582}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/process.v","diagnostics":[]}},"timestamp":1664350584}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/process.v","diagnostics":[]}},"timestamp":1664350584}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/vac.v","diagnostics":[]}},"timestamp":1664350590}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/vac.v","diagnostics":[]}},"timestamp":1664350590}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/win_def.v","diagnostics":[]}},"timestamp":1664350591}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/win_def.v","diagnostics":[]}},"timestamp":1664350592}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/win_def.v","diagnostics":[]}},"timestamp":1664350594}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/vac.v","diagnostics":[]}},"timestamp":1664350597}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/process.v","diagnostics":[]}},"timestamp":1664350601}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/memory.v","diagnostics":[]}},"timestamp":1664350604}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350606}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/injector.v","diagnostics":[]}},"timestamp":1664350609}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/hijack.v","diagnostics":[]}},"timestamp":1664350613}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350657}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350659}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/fleur/Documents/prod/projects/2022/injector/map.v","diagnostics":[]}},"timestamp":1664350659}
{"kind":"send-response","message":{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"